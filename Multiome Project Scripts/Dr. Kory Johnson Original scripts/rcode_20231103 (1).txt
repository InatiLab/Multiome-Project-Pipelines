#################################################################################
# Code Call Organization By: Kory R Johnson
# Affiliation: NINDS/NIH Bioinformatics Core
# Contact information: johnsonko@mail.nih.gov
################################################################################

################################################################################
# Start intractive session
################################################################################

cd /data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC

sinteractive --mem=300g --cpus-per-task=4 --time 36:00:00 --gres=lscratch:200 # augur

################################################################################
# Launch R
################################################################################

module load R Rstudio
rstudio &

################################################################################
# Initialize environment
################################################################################

rm(list=ls())
options(object.size=Inf)

################################################################################
# Install required libraries
################################################################################

library(Signac)
library(Seurat)
library(SeuratWrappers)
library(monocle3)
library(Matrix)
library(ggplot2)
library(patchwork)
library(JASPAR2020)
library(TFBSTools)
library(dplyr)
library(BSgenome.Mmusculus.UCSC.mm10)

devtools::install_github("omarwagih/ggseqlogo")
library(ggseqlogo)

library(openxlsx)
library(EnsDb.Mmusculus.v79)
library(stringr)
library(clustree)
library(scales)
library(openxlsx)
library(patchwork)

################################################################################
# Input data files
################################################################################

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/input_files")

# read in peak sets

LL_F1_DG_atac_bed <- read.table("LL_F1_DG_atac_peaks.bed",col.names = c("chr", "start", "end"))

LL_F2_DG_atac_bed <- read.table("LL_F2_DG_atac_peaks.bed",col.names = c("chr", "start", "end"))

LL_M1_DG_atac_bed <- read.table("LL_M1_DG_atac_peaks.bed",col.names = c("chr", "start", "end"))

LL_M2_DG_atac_bed <- read.table("LL_M2_DG_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_F1_VV_atac_bed <- read.table("DG_F1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_F2_VV_atac_bed <- read.table("DG_F2_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_M1_VV_atac_bed <- read.table("DG_M1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_M2_VV_atac_bed <- read.table("DG_M2_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

################################################################################
# convert to genomic ranges
################################################################################

gr.LL.F1.DG <- makeGRangesFromDataFrame(LL_F1_DG_atac_bed)
gr.LL.F2.DG <- makeGRangesFromDataFrame(LL_F2_DG_atac_bed)
gr.LL.M1.DG <- makeGRangesFromDataFrame(LL_M1_DG_atac_bed)
gr.LL.M2.DG <- makeGRangesFromDataFrame(LL_M2_DG_atac_bed)
gr.DG.F1.VV <- makeGRangesFromDataFrame(DG_F1_VV_atac_bed)
gr.DG.F2.VV <- makeGRangesFromDataFrame(DG_F2_VV_atac_bed)
gr.DG.M1.VV <- makeGRangesFromDataFrame(DG_M1_VV_atac_bed)
gr.DG.M2.VV <- makeGRangesFromDataFrame(DG_M2_VV_atac_bed)

################################################################################
# load metadata
################################################################################

md.LL.F1.DG <- read.table(
  file = "LL_F1_DG_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.LL.F2.DG <- read.table(
  file = "LL_F2_DG_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.LL.M1.DG <- read.table(
  file = "LL_M1_DG_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.LL.M2.DG <- read.table(
  file = "LL_M2_DG_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG.F1.VV <- read.table(
  file = "DG_F1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG.F2.VV <- read.table(
  file = "DG_F2_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG.M1.VV <- read.table(
  file = "DG_M1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG.M2.VV <- read.table(
  file = "DG_M2_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

################################################################################
# perform an initial filtering of low count cells
################################################################################

md.LL.F1.DG <- md.LL.F1.DG[md.LL.F1.DG$atac_fragments > 500,]

md.LL.F2.DG <- md.LL.F2.DG[md.LL.F2.DG$atac_fragments > 500,]

md.LL.M1.DG <- md.LL.M1.DG[md.LL.M1.DG$atac_fragments > 500,]

md.LL.M2.DG <- md.LL.M2.DG[md.LL.M2.DG$atac_fragments > 500,]

md.DG.F1.VV <- md.DG.F1.VV[md.DG.F1.VV$atac_fragments > 500,]

md.DG.F2.VV <- md.DG.F2.VV[md.DG.F2.VV$atac_fragments > 500,]

md.DG.M1.VV <- md.DG.M1.VV[md.DG.M1.VV$atac_fragments > 500,]

md.DG.M2.VV <- md.DG.M2.VV[md.DG.M2.VV$atac_fragments > 500,]

################################################################################
# create fragment objects
################################################################################

frags.LL.F1.DG <- CreateFragmentObject(
  path = "LL_F1_DG_atac_fragments.tsv.gz",
  cells = rownames(md.LL.F1.DG)
)

frags.LL.F2.DG <- CreateFragmentObject(
  path = "LL_F2_DG_atac_fragments.tsv.gz",
  cells = rownames(md.LL.F2.DG)
)

frags.LL.M1.DG <- CreateFragmentObject(
  path = "LL_M1_DG_atac_fragments.tsv.gz",
  cells = rownames(md.LL.M1.DG)
)

frags.LL.M2.DG <- CreateFragmentObject(
  path = "LL_M2_DG_atac_fragments.tsv.gz",
  cells = rownames(md.LL.M2.DG)
)

frags.DG.F1.VV <- CreateFragmentObject(
  path = "DG_F1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG.F1.VV)
)

frags.DG.F2.VV <- CreateFragmentObject(
  path = "DG_F2_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG.F2.VV)
)

frags.DG.M1.VV <- CreateFragmentObject(
  path = "DG_M1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG.M1.VV)
)

frags.DG.M2.VV <- CreateFragmentObject(
  path = "DG_M2_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG.M2.VV)
)

################################################################################
# Quantify peaks in each dataset
################################################################################

LL.F1.DG.counts <- FeatureMatrix(
  fragments = frags.LL.F1.DG,
  features = reduce(x=c(gr.LL.F1.DG)),
  cells = rownames(md.LL.F1.DG)
)

LL.F2.DG.counts <- FeatureMatrix(
  fragments = frags.LL.F2.DG,
  features = reduce(x=c(gr.LL.F2.DG)),
  cells = rownames(md.LL.F2.DG)
)

LL.M1.DG.counts <- FeatureMatrix(
  fragments = frags.LL.M1.DG,
  features = reduce(x=c(gr.LL.M1.DG)),
  cells = rownames(md.LL.M1.DG)
)

LL.M2.DG.counts <- FeatureMatrix(
  fragments = frags.LL.M2.DG,
  features = reduce(x=c(gr.LL.M2.DG)),
  cells = rownames(md.LL.M2.DG)
)

DG.F1.VV.counts <- FeatureMatrix(
  fragments = frags.DG.F1.VV,
  features = reduce(x=c(gr.DG.F1.VV)),
  cells = rownames(md.DG.F1.VV)
)

DG.F2.VV.counts <- FeatureMatrix(
  fragments = frags.DG.F2.VV,
  features = reduce(x=c(gr.DG.F2.VV)),
  cells = rownames(md.DG.F2.VV)
)

DG.M1.VV.counts <- FeatureMatrix(
  fragments = frags.DG.M1.VV,
  features = reduce(x=c(gr.DG.M1.VV)),
  cells = rownames(md.DG.M1.VV)
)

DG.M2.VV.counts <- FeatureMatrix(
  fragments = frags.DG.M2.VV,
  features = reduce(x=c(gr.DG.M2.VV)),
  cells = rownames(md.DG.M2.VV)
)

################################################################################
# Create Chromatin Assay Objects
################################################################################

LL.F1.DG.chrom_assay <- CreateChromatinAssay(counts = LL.F1.DG.counts, fragments = frags.LL.F1.DG)
LL.F2.DG.chrom_assay <- CreateChromatinAssay(counts = LL.F2.DG.counts, fragments = frags.LL.F2.DG)
LL.M1.DG.chrom_assay <- CreateChromatinAssay(counts = LL.M1.DG.counts, fragments = frags.LL.M1.DG)
LL.M2.DG.chrom_assay <- CreateChromatinAssay(counts = LL.M2.DG.counts, fragments = frags.LL.M2.DG)
DG.F1.VV.chrom_assay <- CreateChromatinAssay(counts = DG.F1.VV.counts, fragments = frags.DG.F1.VV)
DG.F2.VV.chrom_assay <- CreateChromatinAssay(counts = DG.F2.VV.counts, fragments = frags.DG.F2.VV)
DG.M1.VV.chrom_assay <- CreateChromatinAssay(counts = DG.M1.VV.counts, fragments = frags.DG.M1.VV)
DG.M2.VV.chrom_assay <- CreateChromatinAssay(counts = DG.M2.VV.counts, fragments = frags.DG.M2.VV)

################################################################################
# Create Seurat objects
################################################################################

LL.F1.DG.atac <- CreateSeuratObject(LL.F1.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.F1.DG)
LL.F2.DG.atac <- CreateSeuratObject(LL.F2.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.F2.DG)
LL.M1.DG.atac <- CreateSeuratObject(LL.M1.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.M1.DG)
LL.M2.DG.atac <- CreateSeuratObject(LL.M2.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.M2.DG)
DG.F1.VV.atac <- CreateSeuratObject(DG.F1.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.F1.VV)
DG.F2.VV.atac <- CreateSeuratObject(DG.F2.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.F2.VV)
DG.M1.VV.atac <- CreateSeuratObject(DG.M1.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.M1.VV)
DG.M2.VV.atac <- CreateSeuratObject(DG.M2.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.M2.VV)

################################################################################
# Add information to identify dataset of origin
################################################################################

Idents(LL.F1.DG.atac) <- "LL.F1.DG"
Idents(LL.F2.DG.atac) <- "LL.F2.DG"
Idents(LL.M1.DG.atac) <- "LL.M1.DG"
Idents(LL.M2.DG.atac) <- "LL.M2.DG"
Idents(DG.F1.VV.atac) <- "DG.F1.VV"
Idents(DG.F2.VV.atac) <- "DG.F2.VV"
Idents(DG.M1.VV.atac) <- "DG.M1.VV"
Idents(DG.M2.VV.atac) <- "DG.M2.VV"

LL.F1.DG.atac$dataset <- "LL.F1.DG"
LL.F2.DG.atac$dataset <- "LL.F2.DG"
LL.M1.DG.atac$dataset <- "LL.M1.DG"
LL.M2.DG.atac$dataset <- "LL.M2.DG"
DG.F1.VV.atac$dataset <- "DG.F1.VV"
DG.F2.VV.atac$dataset <- "DG.F2.VV"
DG.M1.VV.atac$dataset <- "DG.M1.VV"
DG.M2.VV.atac$dataset <- "DG.M2.VV"

################################################################################
# add gene annotations
################################################################################

annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)

seqlevels(annotations) <- paste0('chr', seqlevels(annotations))

genome(annotations) <- "mm10"

Annotation(LL.F1.DG.atac) <- annotations
Annotation(LL.F2.DG.atac) <- annotations
Annotation(LL.M1.DG.atac) <- annotations
Annotation(LL.M2.DG.atac) <- annotations
Annotation(DG.F1.VV.atac) <- annotations
Annotation(DG.F2.VV.atac) <- annotations
Annotation(DG.M1.VV.atac) <- annotations
Annotation(DG.M2.VV.atac) <- annotations

################################################################################
# calculate blacklist fraction
################################################################################

LL.F1.DG.atac$blacklist_fraction <- FractionCountsInRegion(
  object = LL.F1.DG.atac, 
  regions = blacklist_mm10
)

LL.F2.DG.atac$blacklist_fraction <- FractionCountsInRegion(
  object = LL.F2.DG.atac, 
  regions = blacklist_mm10
)

LL.M1.DG.atac$blacklist_fraction <- FractionCountsInRegion(
  object = LL.M1.DG.atac, 
  regions = blacklist_mm10
)

LL.M2.DG.atac$blacklist_fraction <- FractionCountsInRegion(
  object = LL.M2.DG.atac, 
  regions = blacklist_mm10
)

DG.F1.VV.atac$blacklist_fraction <- FractionCountsInRegion(
  object = DG.F1.VV.atac, 
  regions = blacklist_mm10
)

DG.F2.VV.atac$blacklist_fraction <- FractionCountsInRegion(
  object = DG.F2.VV.atac, 
  regions = blacklist_mm10
)

DG.M1.VV.atac$blacklist_fraction <- FractionCountsInRegion(
  object = DG.M1.VV.atac, 
  regions = blacklist_mm10
)

DG.M2.VV.atac$blacklist_fraction <- FractionCountsInRegion(
  object = DG.M2.VV.atac, 
  regions = blacklist_mm10
)

################################################################################
# calculate Nucleosome Signal metric
################################################################################

LL.F1.DG.atac <- NucleosomeSignal(object = LL.F1.DG.atac)
LL.F2.DG.atac <- NucleosomeSignal(object = LL.F2.DG.atac)
LL.M1.DG.atac <- NucleosomeSignal(object = LL.M1.DG.atac)
LL.M2.DG.atac <- NucleosomeSignal(object = LL.M2.DG.atac)
DG.F1.VV.atac <- NucleosomeSignal(object = DG.F1.VV.atac)
DG.F2.VV.atac <- NucleosomeSignal(object = DG.F2.VV.atac)
DG.M1.VV.atac <- NucleosomeSignal(object = DG.M1.VV.atac)
DG.M2.VV.atac <- NucleosomeSignal(object = DG.M2.VV.atac)

################################################################################
# define low vs high nucleosomal signal strength
################################################################################

LL.F1.DG.atac$nucleosome_group <- ifelse(LL.F1.DG.atac$nucleosome_signal >  quantile(LL.F1.DG.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

LL.F2.DG.atac$nucleosome_group <- ifelse(LL.F2.DG.atac$nucleosome_signal >  quantile(LL.F2.DG.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

LL.M1.DG.atac$nucleosome_group <- ifelse(LL.M1.DG.atac$nucleosome_signal >  quantile(LL.M1.DG.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

LL.M2.DG.atac$nucleosome_group <- ifelse(LL.M2.DG.atac$nucleosome_signal >  quantile(LL.M2.DG.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

DG.F1.VV.atac$nucleosome_group <- ifelse(DG.F1.VV.atac$nucleosome_signal >  quantile(DG.F1.VV.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

DG.F2.VV.atac$nucleosome_group <- ifelse(DG.F2.VV.atac$nucleosome_signal >  quantile(DG.F2.VV.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

DG.M1.VV.atac$nucleosome_group <- ifelse(DG.M1.VV.atac$nucleosome_signal >  quantile(DG.M1.VV.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

DG.M2.VV.atac$nucleosome_group <- ifelse(DG.M2.VV.atac$nucleosome_signal >  quantile(DG.M2.VV.atac$nucleosome_signal,0.25), 'NS > 25th', 'NS < 25th')

################################################################################
# plot low vs high nucleosomal signal strength
################################################################################

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/io")

svg("1_atac_pre_merge_inspection_LL_F1_DG_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = LL.F1.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = LL.F1.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_LL_F2_DG_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = LL.F2.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = LL.F2.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_LL_M1_DG_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = LL.M1.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = LL.M1.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_LL_M2_DG_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = LL.M2.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = LL.M2.DG.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_DG_F1_VV_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = DG.F1.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = DG.F1.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_DG_F2_VV_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = DG.F2.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = DG.F2.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_DG_M1_VV_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = DG.M1.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = DG.M1.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

svg("1_atac_pre_merge_inspection_DG_M2_VV_nucleosomal_signal_strength.svg")
print(FragmentHistogram(object = DG.M2.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000'))
dev.off()
FragmentHistogram(object = DG.M2.VV.atac, group.by = 'nucleosome_group', region = 'chr1-1-10000000')

################################################################################
# inspect high vs low TSS enrichment signal strength
################################################################################

LL.F1.DG.atac <- TSSEnrichment(LL.F1.DG.atac, fast = FALSE)
LL.F2.DG.atac <- TSSEnrichment(LL.F2.DG.atac, fast = FALSE)
LL.M1.DG.atac <- TSSEnrichment(LL.M1.DG.atac, fast = FALSE)
LL.M2.DG.atac <- TSSEnrichment(LL.M2.DG.atac, fast = FALSE)
DG.F1.VV.atac <- TSSEnrichment(DG.F1.VV.atac, fast = FALSE)
DG.F2.VV.atac <- TSSEnrichment(DG.F2.VV.atac, fast = FALSE)
DG.M1.VV.atac <- TSSEnrichment(DG.M1.VV.atac, fast = FALSE)
DG.M2.VV.atac <- TSSEnrichment(DG.M2.VV.atac, fast = FALSE)

################################################################################
# inspect high vs low TSS enrichment
################################################################################

LL.F1.DG.atac$high.tss <- ifelse(LL.F1.DG.atac$TSS.enrichment > quantile(LL.F1.DG.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_LL_F1_DG_TSS_enrichment.svg")
print(TSSPlot(LL.F1.DG.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(LL.F1.DG.atac, group.by = 'high.tss') + NoLegend()

LL.F2.DG.atac$high.tss <- ifelse(LL.F2.DG.atac$TSS.enrichment > quantile(LL.F2.DG.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_LL_F2_DG_TSS_enrichment.svg")
print(TSSPlot(LL.F2.DG.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(LL.F2.DG.atac, group.by = 'high.tss') + NoLegend()

LL.M1.DG.atac$high.tss <- ifelse(LL.M1.DG.atac$TSS.enrichment > quantile(LL.M1.DG.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_LL_M1_DG_TSS_enrichment.svg")
print(TSSPlot(LL.M1.DG.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(LL.M1.DG.atac, group.by = 'high.tss') + NoLegend()

LL.M2.DG.atac$high.tss <- ifelse(LL.M2.DG.atac$TSS.enrichment > quantile(LL.M2.DG.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_LL_M2_DG_TSS_enrichment.svg")
print(TSSPlot(LL.M2.DG.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(LL.M2.DG.atac, group.by = 'high.tss') + NoLegend()

DG.F1.VV.atac$high.tss <- ifelse(DG.F1.VV.atac$TSS.enrichment > quantile(DG.F1.VV.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_DG_F1_VV_TSS_enrichment.svg")
print(TSSPlot(DG.F1.VV.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(DG.F1.VV.atac, group.by = 'high.tss') + NoLegend()

DG.F2.VV.atac$high.tss <- ifelse(DG.F2.VV.atac$TSS.enrichment > quantile(DG.F2.VV.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_DG_F2_VV_TSS_enrichment.svg")
print(TSSPlot(DG.F2.VV.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(DG.F2.VV.atac, group.by = 'high.tss') + NoLegend()

DG.M1.VV.atac$high.tss <- ifelse(DG.M1.VV.atac$TSS.enrichment > quantile(DG.M1.VV.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_DG_M1_VV_TSS_enrichment.svg")
print(TSSPlot(DG.M1.VV.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(DG.M1.VV.atac, group.by = 'high.tss') + NoLegend()

DG.M2.VV.atac$high.tss <- ifelse(DG.M2.VV.atac$TSS.enrichment > quantile(DG.M2.VV.atac$TSS.enrichment,0.25), 'TSS > 25th', 'TSS < 25th')
svg("2_atac_pre_merge_inspection_DG_M2_VV_TSS_enrichment.svg")
print(TSSPlot(DG.M2.VV.atac, group.by = 'high.tss') + NoLegend())
dev.off()
TSSPlot(DG.M2.VV.atac, group.by = 'high.tss') + NoLegend()

################################################################################
# log transform quality metrics for LL.F1.DG.atac
################################################################################

LL.F1.DG.atac$log2_peak_region_fragments <- log2(LL.F1.DG.atac$atac_peak_region_fragments+2)
LL.F1.DG.atac$log2_nCount_ATAC <- log2(LL.F1.DG.atac$nCount_ATAC+2)
LL.F1.DG.atac$pct_reads_in_peaks <- (LL.F1.DG.atac$atac_peak_region_fragments / LL.F1.DG.atac$atac_fragments) * 100
LL.F1.DG.atac$log2_atac_TSS_fragments <- log2(LL.F1.DG.atac$atac_TSS_fragments+2)
LL.F1.DG.atac$log2_nucleosome_signal <- log2(LL.F1.DG.atac$nucleosome_signal+2)
LL.F1.DG.atac$log2_TSS_enrichment <- log2(LL.F1.DG.atac$TSS.enrichment+2)
LL.F1.DG.atac$log2_blacklist_fraction <- log2(LL.F1.DG.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_LL.F1.DG_density_plot_log2_nCount.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_LL.F1.DG_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_LL.F1.DG_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_LL.F1.DG_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_LL.F1.DG_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_LL.F1.DG_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_LL.F1.DG_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# nucleosome_signal inspection for LL.F1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_LL.F1.DG_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F1.DG.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_LL.F1.DG_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for LL.F1.DG.atac
################################################################################

LL.F1.DG.atac <- subset(
  x = LL.F1.DG.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_nucleosome_signal))))
LL.F1.DG.atac

LL.F1.DG.atac <- subset(
  x = LL.F1.DG.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(LL.F1.DG.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(LL.F1.DG.atac@meta.data$log2_blacklist_fraction))))
LL.F1.DG.atac

saveRDS(LL.F1.DG.atac,"LL.F1.DG.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for LL.F2.DG.atac
################################################################################

LL.F2.DG.atac$log2_peak_region_fragments <- log2(LL.F2.DG.atac$atac_peak_region_fragments+2)
LL.F2.DG.atac$log2_nCount_ATAC <- log2(LL.F2.DG.atac$nCount_ATAC+2)
LL.F2.DG.atac$pct_reads_in_peaks <- (LL.F2.DG.atac$atac_peak_region_fragments / LL.F2.DG.atac$atac_fragments) * 100
LL.F2.DG.atac$log2_atac_TSS_fragments <- log2(LL.F2.DG.atac$atac_TSS_fragments+2)
LL.F2.DG.atac$log2_nucleosome_signal <- log2(LL.F2.DG.atac$nucleosome_signal+2)
LL.F2.DG.atac$log2_TSS_enrichment <- log2(LL.F2.DG.atac$TSS.enrichment+2)
LL.F2.DG.atac$log2_blacklist_fraction <- log2(LL.F2.DG.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_LL.F2.DG_density_plot_log2_nCount.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_LL.F2.DG_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_LL.F2.DG_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_LL.F2.DG_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_LL.F2.DG_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_LL.F2.DG_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_LL.F2.DG_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# nucleosome_signal inspection for LL.F2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_LL.F2.DG_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.F2.DG.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_LL.F2.DG_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for LL.F2.DG.atac
################################################################################

LL.F2.DG.atac <- subset(
  x = LL.F2.DG.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_nucleosome_signal))))
LL.F2.DG.atac

LL.F2.DG.atac <- subset(
  x = LL.F2.DG.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(LL.F2.DG.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(LL.F2.DG.atac@meta.data$log2_blacklist_fraction))))
LL.F2.DG.atac

saveRDS(LL.F2.DG.atac,"LL.F2.DG.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for LL.M1.DG.atac
################################################################################

LL.M1.DG.atac$log2_peak_region_fragments <- log2(LL.M1.DG.atac$atac_peak_region_fragments+2)
LL.M1.DG.atac$log2_nCount_ATAC <- log2(LL.M1.DG.atac$nCount_ATAC+2)
LL.M1.DG.atac$pct_reads_in_peaks <- (LL.M1.DG.atac$atac_peak_region_fragments / LL.M1.DG.atac$atac_fragments) * 100
LL.M1.DG.atac$log2_atac_TSS_fragments <- log2(LL.M1.DG.atac$atac_TSS_fragments+2)
LL.M1.DG.atac$log2_nucleosome_signal <- log2(LL.M1.DG.atac$nucleosome_signal+2)
LL.M1.DG.atac$log2_TSS_enrichment <- log2(LL.M1.DG.atac$TSS.enrichment+2)
LL.M1.DG.atac$log2_blacklist_fraction <- log2(LL.M1.DG.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for LL.M1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_LL.M1.DG_density_plot_log2_nCount.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for LL.M1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_LL.M1.DG_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for LL.M1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_LL.M1.DG_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_LL.M1.DG_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_LL.M1.DG_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for LL.M1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_LL.M1.DG_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for LL.M1.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_LL.M1.DG_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

# 

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_LL.M1.DG_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M1.DG.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_LL.M1.DG_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for LL.M1.DG.atac
################################################################################

LL.M1.DG.atac <- subset(
  x = LL.M1.DG.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_nucleosome_signal))))
LL.M1.DG.atac

LL.M1.DG.atac <- subset(
  x = LL.M1.DG.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(LL.M1.DG.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(LL.M1.DG.atac@meta.data$log2_blacklist_fraction))))
LL.M1.DG.atac

saveRDS(LL.M1.DG.atac,"LL.M1.DG.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for LL.M2.DG.atac
################################################################################

LL.M2.DG.atac$log2_peak_region_fragments <- log2(LL.M2.DG.atac$atac_peak_region_fragments+2)
LL.M2.DG.atac$log2_nCount_ATAC <- log2(LL.M2.DG.atac$nCount_ATAC+2)
LL.M2.DG.atac$pct_reads_in_peaks <- (LL.M2.DG.atac$atac_peak_region_fragments / LL.M2.DG.atac$atac_fragments) * 100
LL.M2.DG.atac$log2_atac_TSS_fragments <- log2(LL.M2.DG.atac$atac_TSS_fragments+2)
LL.M2.DG.atac$log2_nucleosome_signal <- log2(LL.M2.DG.atac$nucleosome_signal+2)
LL.M2.DG.atac$log2_TSS_enrichment <- log2(LL.M2.DG.atac$TSS.enrichment+2)
LL.M2.DG.atac$log2_blacklist_fraction <- log2(LL.M2.DG.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for LL.M2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_LL.M2.DG_density_plot_log2_nCount.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for LL.M2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_LL.M2.DG_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for LL.M2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_LL.M2.DG_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_LL.M2.DG_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_LL.M2.DG_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for LL.M2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_LL.M2.DG_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for LL.M2.DG.atac
################################################################################

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_LL.M2.DG_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

# 

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_LL.M2.DG_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = LL.M2.DG.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_LL.M2.DG_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for LL.M2.DG.atac
################################################################################

LL.M2.DG.atac <- subset(
  x = LL.M2.DG.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_nucleosome_signal))))
LL.M2.DG.atac

LL.M2.DG.atac <- subset(
  x = LL.M2.DG.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(LL.M2.DG.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(LL.M2.DG.atac@meta.data$log2_blacklist_fraction))))
LL.M2.DG.atac

saveRDS(LL.M2.DG.atac,"LL.M2.DG.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for DG.F1.VV.atac
################################################################################

DG.F1.VV.atac$log2_peak_region_fragments <- log2(DG.F1.VV.atac$atac_peak_region_fragments+2)
DG.F1.VV.atac$log2_nCount_ATAC <- log2(DG.F1.VV.atac$nCount_ATAC+2)
DG.F1.VV.atac$pct_reads_in_peaks <- (DG.F1.VV.atac$atac_peak_region_fragments / DG.F1.VV.atac$atac_fragments) * 100
DG.F1.VV.atac$log2_atac_TSS_fragments <- log2(DG.F1.VV.atac$atac_TSS_fragments+2)
DG.F1.VV.atac$log2_nucleosome_signal <- log2(DG.F1.VV.atac$nucleosome_signal+2)
DG.F1.VV.atac$log2_TSS_enrichment <- log2(DG.F1.VV.atac$TSS.enrichment+2)
DG.F1.VV.atac$log2_blacklist_fraction <- log2(DG.F1.VV.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for DG.F1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_DG.F1.VV_density_plot_log2_nCount.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for DG.F1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_DG.F1.VV_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for DG.F1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_DG.F1.VV_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_DG.F1.VV_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_DG.F1.VV_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for DG.F1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_DG.F1.VV_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for DG.F1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_DG.F1.VV_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

# 

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_DG.F1.VV_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F1.VV.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_DG.F1.VV_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for DG.F1.VV.atac
################################################################################

DG.F1.VV.atac <- subset(
  x = DG.F1.VV.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_nucleosome_signal))))
DG.F1.VV.atac

DG.F1.VV.atac <- subset(
  x = DG.F1.VV.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(DG.F1.VV.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(DG.F1.VV.atac@meta.data$log2_blacklist_fraction))))
DG.F1.VV.atac

saveRDS(DG.F1.VV.atac,"DG.F1.VV.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for DG.F2.VV.atac
################################################################################

DG.F2.VV.atac$log2_peak_region_fragments <- log2(DG.F2.VV.atac$atac_peak_region_fragments+2)
DG.F2.VV.atac$log2_nCount_ATAC <- log2(DG.F2.VV.atac$nCount_ATAC+2)
DG.F2.VV.atac$pct_reads_in_peaks <- (DG.F2.VV.atac$atac_peak_region_fragments / DG.F2.VV.atac$atac_fragments) * 100
DG.F2.VV.atac$log2_atac_TSS_fragments <- log2(DG.F2.VV.atac$atac_TSS_fragments+2)
DG.F2.VV.atac$log2_nucleosome_signal <- log2(DG.F2.VV.atac$nucleosome_signal+2)
DG.F2.VV.atac$log2_TSS_enrichment <- log2(DG.F2.VV.atac$TSS.enrichment+2)
DG.F2.VV.atac$log2_blacklist_fraction <- log2(DG.F2.VV.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for DG.F2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_DG.F2.VV_density_plot_log2_nCount.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for DG.F2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_DG.F2.VV_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for DG.F2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_DG.F2.VV_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_DG.F2.VV_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_DG.F2.VV_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for DG.F2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_DG.F2.VV_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for DG.F2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_DG.F2.VV_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

# 

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_DG.F2.VV_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.F2.VV.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_DG.F2.VV_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for DG.F2.VV.atac
################################################################################

DG.F2.VV.atac <- subset(
  x = DG.F2.VV.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_nucleosome_signal))))
DG.F2.VV.atac

DG.F2.VV.atac <- subset(
  x = DG.F2.VV.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(DG.F2.VV.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(DG.F2.VV.atac@meta.data$log2_blacklist_fraction))))
DG.F2.VV.atac

saveRDS(DG.F2.VV.atac,"DG.F2.VV.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for DG.M1.VV.atac
################################################################################

DG.M1.VV.atac$log2_peak_region_fragments <- log2(DG.M1.VV.atac$atac_peak_region_fragments+2)
DG.M1.VV.atac$log2_nCount_ATAC <- log2(DG.M1.VV.atac$nCount_ATAC+2)
DG.M1.VV.atac$pct_reads_in_peaks <- (DG.M1.VV.atac$atac_peak_region_fragments / DG.M1.VV.atac$atac_fragments) * 100
DG.M1.VV.atac$log2_atac_TSS_fragments <- log2(DG.M1.VV.atac$atac_TSS_fragments+2)
DG.M1.VV.atac$log2_nucleosome_signal <- log2(DG.M1.VV.atac$nucleosome_signal+2)
DG.M1.VV.atac$log2_TSS_enrichment <- log2(DG.M1.VV.atac$TSS.enrichment+2)
DG.M1.VV.atac$log2_blacklist_fraction <- log2(DG.M1.VV.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for DG.M1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_DG.M1.VV_density_plot_log2_nCount.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for DG.M1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_DG.M1.VV_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for DG.M1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_DG.M1.VV_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_DG.M1.VV_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_DG.M1.VV_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for DG.M1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_DG.M1.VV_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for DG.M1.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_DG.M1.VV_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

# 

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_DG.M1.VV_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M1.VV.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_DG.M1.VV_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter for DG.M1.VV.atac
################################################################################

DG.M1.VV.atac <- subset(
  x = DG.M1.VV.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_nucleosome_signal))))
DG.M1.VV.atac

DG.M1.VV.atac <- subset(
  x = DG.M1.VV.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(DG.M1.VV.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(DG.M1.VV.atac@meta.data$log2_blacklist_fraction))))
DG.M1.VV.atac

saveRDS(DG.M1.VV.atac,"DG.M1.VV.atac.post.hard.filter.rds")

################################################################################
# log transform quality metrics for DG.M2.VV.atac
################################################################################

DG.M2.VV.atac$log2_peak_region_fragments <- log2(DG.M2.VV.atac$atac_peak_region_fragments+2)
DG.M2.VV.atac$log2_nCount_ATAC <- log2(DG.M2.VV.atac$nCount_ATAC+2)
DG.M2.VV.atac$pct_reads_in_peaks <- (DG.M2.VV.atac$atac_peak_region_fragments / DG.M2.VV.atac$atac_fragments) * 100
DG.M2.VV.atac$log2_atac_TSS_fragments <- log2(DG.M2.VV.atac$atac_TSS_fragments+2)
DG.M2.VV.atac$log2_nucleosome_signal <- log2(DG.M2.VV.atac$nucleosome_signal+2)
DG.M2.VV.atac$log2_TSS_enrichment <- log2(DG.M2.VV.atac$TSS.enrichment+2)
DG.M2.VV.atac$log2_blacklist_fraction <- log2(DG.M2.VV.atac$blacklist_fraction+2)

################################################################################
# nCount inspection for DG.M2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("3_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_nCount.svg")
print(v)
dev.off()

svg("4_atac_pre_merge_inspection_DG.M2.VV_density_plot_log2_nCount.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- v + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("5_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_nCount_with_cutoff_selection.svg")
print(v)
dev.off()

################################################################################
# peak_region_fragments inspection for DG.M2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("6_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("7_atac_pre_merge_inspection_DG.M2.VV_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments)))),lty=5)
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("8_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# pct_reads_in_peaks inspection for DG.M2.VV.atac
################################################################################


v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("9_atac_pre_merge_inspection_DG.M2.VV_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("10_atac_pre_merge_inspection_DG.M2.VV_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks)))),lty=5)
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2)) + 
geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("11_atac_pre_merge_inspection_DG.M2.VV_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

################################################################################
# log2_atac_TSS_fragments inspection for DG.M2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("12_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("13_atac_pre_merge_inspection_DG.M2.VV_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v
svg("14_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# log2_TSS_enrichment inspection for DG.M2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("15_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("16_atac_pre_merge_inspection_DG.M2.VV_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment)))),lty=5)
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v
svg("17_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# nucleosome_signal inspection for DG.M2.VV.atac
################################################################################

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("18_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("19_atac_pre_merge_inspection_DG.M2.VV_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=2)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=3)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-3*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=4)
abline(v=(mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-4*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal)))),lty=5)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = DG.M2.VV.atac,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("20_atac_pre_merge_inspection_DG.M2.VV_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

################################################################################
# hard filter DG.M2.VV.atac
################################################################################

DG.M2.VV.atac <- subset(
  x = DG.M2.VV.atac,
  subset = log2_nCount_ATAC > mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_nCount_ATAC < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nCount_ATAC))) & 
log2_peak_region_fragments > mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))) & 
log2_peak_region_fragments < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_peak_region_fragments))) & 
pct_reads_in_peaks > mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))) & 
pct_reads_in_peaks < mean(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$pct_reads_in_peaks))) & 
log2_atac_TSS_fragments > mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_atac_TSS_fragments < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_atac_TSS_fragments))) & 
log2_TSS_enrichment > mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_TSS_enrichment < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_TSS_enrichment))) & 
log2_nucleosome_signal < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))) &
log2_nucleosome_signal > mean(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))+(-2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_nucleosome_signal))))
DG.M2.VV.atac

DG.M2.VV.atac <- subset(
  x = DG.M2.VV.atac,
  subset = log2_blacklist_fraction < mean(as.numeric(DG.M2.VV.atac@meta.data$log2_blacklist_fraction))+(2*sd(as.numeric(DG.M2.VV.atac@meta.data$log2_blacklist_fraction))))
DG.M2.VV.atac

saveRDS(DG.M2.VV.atac,"DG.M2.VV.atac.post.hard.filter.rds")

################################################################################
# perform informal merge to get passing cells
################################################################################

combined <- merge(
  x = LL.F1.DG.atac,
  y = list(LL.F2.DG.atac,LL.M1.DG.atac,LL.M2.DG.atac,DG.F1.VV.atac,DG.F2.VV.atac,DG.M1.VV.atac,DG.M2.VV.atac),
  add.cell.ids = c("LL.F1.DG", "LL.F2.DG", "LL.M1.DG", "LL.M2.DG", "DG.F1.VV", "DG.F2.VV", "DG.M1.VV", "DG.M2.VV")
)

capture.post.hard.filter.cells <- rownames(combined@meta.data)

################################################################################
# Create a unified set of peaks to quantify in each dataset
# https://stuartlab.org/signac/articles/merging
################################################################################

combined.peaks <- reduce(x=c(gr.LL.F1.DG,
gr.LL.F2.DG,
gr.LL.M1.DG,
gr.LL.M2.DG,
gr.DG.F1.VV,
gr.DG.F2.VV,
gr.DG.M1.VV,
gr.DG.M2.VV))

################################################################################
# Filter out bad peaks based on length
################################################################################

peakwidths <- width(combined.peaks)
combined.peaks <- combined.peaks[peakwidths  < 10000 & peakwidths > 20]
combined.peaks

################################################################################
# Quantify peaks in each dataset
################################################################################

LL.F1.DG.counts <- FeatureMatrix(
  fragments = frags.LL.F1.DG,
  features = combined.peaks,
  cells = rownames(md.LL.F1.DG)
)

LL.F2.DG.counts <- FeatureMatrix(
  fragments = frags.LL.F2.DG,
  features = combined.peaks,
  cells = rownames(md.LL.F2.DG)
)

LL.M1.DG.counts <- FeatureMatrix(
  fragments = frags.LL.M1.DG,
  features = combined.peaks,
  cells = rownames(md.LL.M1.DG)
)

LL.M2.DG.counts <- FeatureMatrix(
  fragments = frags.LL.M2.DG,
  features = combined.peaks,
  cells = rownames(md.LL.M2.DG)
)

DG.F1.VV.counts <- FeatureMatrix(
  fragments = frags.DG.F1.VV,
  features = combined.peaks,
  cells = rownames(md.DG.F1.VV)
)

DG.F2.VV.counts <- FeatureMatrix(
  fragments = frags.DG.F2.VV,
  features = combined.peaks,
  cells = rownames(md.DG.F2.VV)
)

DG.M1.VV.counts <- FeatureMatrix(
  fragments = frags.DG.M1.VV,
  features = combined.peaks,
  cells = rownames(md.DG.M1.VV)
)

DG.M2.VV.counts <- FeatureMatrix(
  fragments = frags.DG.M2.VV,
  features = combined.peaks,
  cells = rownames(md.DG.M2.VV)
)

################################################################################
# Create Seurat objects
################################################################################

LL.F1.DG.chrom_assay <- CreateChromatinAssay(counts = LL.F1.DG.counts, fragments = frags.LL.F1.DG)
LL.F1.DG.atac.final <- CreateSeuratObject(LL.F1.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.F1.DG)

LL.F2.DG.chrom_assay <- CreateChromatinAssay(counts = LL.F2.DG.counts, fragments = frags.LL.F2.DG)
LL.F2.DG.atac.final <- CreateSeuratObject(LL.F2.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.F2.DG)

LL.M1.DG.chrom_assay <- CreateChromatinAssay(counts = LL.M1.DG.counts, fragments = frags.LL.M1.DG)
LL.M1.DG.atac.final <- CreateSeuratObject(LL.M1.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.M1.DG)

LL.M2.DG.chrom_assay <- CreateChromatinAssay(counts = LL.M2.DG.counts, fragments = frags.LL.M2.DG)
LL.M2.DG.atac.final <- CreateSeuratObject(LL.M2.DG.chrom_assay, assay = "ATAC", meta.data=md.LL.M2.DG)

DG.F1.VV.chrom_assay <- CreateChromatinAssay(counts = DG.F1.VV.counts, fragments = frags.DG.F1.VV)
DG.F1.VV.atac.final <- CreateSeuratObject(DG.F1.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.F1.VV)

DG.F2.VV.chrom_assay <- CreateChromatinAssay(counts = DG.F2.VV.counts, fragments = frags.DG.F2.VV)
DG.F2.VV.atac.final <- CreateSeuratObject(DG.F2.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.F2.VV)

DG.M1.VV.chrom_assay <- CreateChromatinAssay(counts = DG.M1.VV.counts, fragments = frags.DG.M1.VV)
DG.M1.VV.atac.final <- CreateSeuratObject(DG.M1.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.M1.VV)

DG.M2.VV.chrom_assay <- CreateChromatinAssay(counts = DG.M2.VV.counts, fragments = frags.DG.M2.VV)
DG.M2.VV.atac.final <- CreateSeuratObject(DG.M2.VV.chrom_assay, assay = "ATAC", meta.data=md.DG.M2.VV)

################################################################################
# Add information to identify dataset of origin
################################################################################

Idents(LL.F1.DG.atac.final) <- "LL.F1.DG"
Idents(LL.F2.DG.atac.final) <- "LL.F2.DG"
Idents(LL.M1.DG.atac.final) <- "LL.M1.DG"
Idents(LL.M2.DG.atac.final) <- "LL.M2.DG"
Idents(DG.F1.VV.atac.final) <- "DG.F1.VV"
Idents(DG.F2.VV.atac.final) <- "DG.F2.VV"
Idents(DG.M1.VV.atac.final) <- "DG.M1.VV"
Idents(DG.M2.VV.atac.final) <- "DG.M2.VV"

LL.F1.DG.atac.final$dataset <- "LL.F1.DG"
LL.F2.DG.atac.final$dataset <- "LL.F2.DG"
LL.M1.DG.atac.final$dataset <- "LL.M1.DG"
LL.M2.DG.atac.final$dataset <- "LL.M2.DG"
DG.F1.VV.atac.final$dataset <- "DG.F1.VV"
DG.F2.VV.atac.final$dataset <- "DG.F2.VV"
DG.M1.VV.atac.final$dataset <- "DG.M1.VV"
DG.M2.VV.atac.final$dataset <- "DG.M2.VV"

################################################################################
# Merge Seurat objects
################################################################################

all.normalized.atac <- merge(LL.F1.DG.atac.final, y = c(LL.F2.DG.atac.final,LL.M1.DG.atac.final,LL.M2.DG.atac.final,DG.F1.VV.atac.final,DG.F2.VV.atac.final,DG.M1.VV.atac.final,DG.M2.VV.atac.final), add.cell.ids=c("LL.F1.DG","LL.F2.DG","LL.M1.DG","LL.M2.DG","DG.F1.VV","DG.F2.VV","DG.M1.VV","DG.M2.VV"), project="Raj", merge.data=TRUE)

all.normalized.atac[["ATAC"]]

################################################################################
# subset with passing cells after hard filter only
################################################################################

all.normalized.atac.final <- all.normalized.atac[,rownames(all.normalized.atac@meta.data)%in%capture.post.hard.filter.cells]
all.normalized.atac.final[["ATAC"]]

temp1 <- table(all.normalized.atac.final@meta.data$dataset)
svg("1_barplot_number_cells_per_sample.svg")
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

################################################################################
# Run pre-process steps
################################################################################

all.normalized.atac.final <- RunTFIDF(all.normalized.atac.final)
all.normalized.atac.final <- FindTopFeatures(all.normalized.atac.final, min.cutoff = 20)
all.normalized.atac.final <- RunSVD(all.normalized.atac.final)
all.normalized.atac.final <- RunUMAP(all.normalized.atac.final, dims = 1:50, reduction = 'lsi')

p <- ElbowPlot(all.normalized.atac.final,ndims=50,reduction = "lsi")
svg("2_scree_plot.svg")
p
dev.off()
p

d <- DepthCor(all.normalized.atac.final)
svg("3_depthcor_plot.svg")
print(d)
dev.off()
d

all.normalized.atac.final <- RunUMAP(all.normalized.atac.final, dims = 2:20, reduction = 'lsi')
all.normalized.atac.final <- FindNeighbors(all.normalized.atac.final,reduction = 'lsi', dims = 2:20)

################################################################################
# inspect by UMAP
################################################################################

dev.off()
svg("4_umap_group_by_dataset.svg")
DimPlot(all.normalized.atac.final, group.by = 'dataset', pt.size = 0.1)
dev.off()
DimPlot(all.normalized.atac.final, group.by = 'dataset', pt.size = 0.1)

dev.off()
svg("5_umap_split_by_dataset.svg")
DimPlot(all.normalized.atac.final, split.by = 'dataset', pt.size = 0.1,ncol=4)
dev.off()
DimPlot(all.normalized.atac.final, split.by = 'dataset', pt.size = 0.1,ncol=4)

################################################################################
# add gene annotations
################################################################################

annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevels(annotations) <- paste0('chr', seqlevels(annotations))
genome(annotations) <- "mm10"
Annotation(all.normalized.atac.final) <- annotations

################################################################################
# inspect by genomic locus
################################################################################

# Penk
svg("6_coverage_plot_penk.svg")
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr4-4132531-4139477"
)
dev.off()
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr4-4132531-4139477"
)

# Sorcs3
svg("7_coverage_plot_sorcs3.svg")
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr19-48205025-48806505"
)
dev.off()
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr19-48205025-48806505"
)

# Chgb
svg("8_coverage_plot_chgb.svg")
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr2-132781278-132795079"
)
dev.off()
CoveragePlot(
  object = all.normalized.atac.final,
  group.by = 'dataset',
  region = "chr2-132781278-132795079"
)

################################################################################
# perform clustering
# https://stuartlab.org/signac/articles/mouse_brain_vignette#non-linear-dimension-reduction-and-clustering
################################################################################

all.normalized.atac.final <- FindClusters(
  object = all.normalized.atac.final,
  algorithm = 3,
  resolution = c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5),
  verbose = FALSE
)

svg("1_clustree_results.svg",width=10,height=20)
clustree(all.normalized.atac.final,prefix="ATAC_snn_res.")
dev.off()
clustree(all.normalized.atac.final,prefix="ATAC_snn_res.")

pdf("2_umap_plots_per_cluster_resolution.pdf")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.04)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.04 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.04, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.04")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.05)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.05 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.05, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.05")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.06)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.06 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.06, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.06")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.07)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.07 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.07, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.07")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.08)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.08 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.08, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.08")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.09)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.09 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.09, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.09")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.1)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.1 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.1, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.1")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.2)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.2 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.2, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.2")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.3)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.3 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.3, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.3")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.4)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.4 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.4, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.4")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.5)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.5 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.5, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.5")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.6)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.6 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.6, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.6")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.7)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.7 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.7, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.7")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.8)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.8 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.8, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.8")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.0.9)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.0.9 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.0.9, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.0.9")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.1)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.1 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.1, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.1")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.2)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.2 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.2, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.2")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.3)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.3 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.3, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.3")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.4)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.4 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.4, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.4")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.5)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.5 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.5, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.5")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.6)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.6 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.6, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.6")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.7)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.7 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.7, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.7")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.8)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.8 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.8, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.8")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.1.9)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.1.9 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.9, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.1.9")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2.1)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2.1 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2.1, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2.1")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2.2)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2.2 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2.2, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2.2")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2.3)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2.3 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2.3, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2.3")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2.4)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2.4 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2.4, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2.4")

my_levels <- as.character(c(0:length(table(as.character(all.normalized.atac.final@meta.data$ATAC_snn_res.2.5)))))
all.normalized.atac.final@meta.data$ATAC_snn_res.2.5 <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.2.5, levels=my_levels)
DimPlot(all.normalized.atac.final, label=TRUE,group.by="ATAC_snn_res.2.5")

dev.off()

saveRDS(all.normalized.atac.final, "atac.post.clustering.rds")

################################################################################
# select resolution
################################################################################

all.normalized.atac.final@meta.data$Final_ATAC_Clusters <- factor(x=all.normalized.atac.final@meta.data$ATAC_snn_res.1.5, levels=as.character(c(0:30)))

################################################################################
# recode
################################################################################

temp <- as.character(unlist(all.normalized.atac.final@meta.data$Final_ATAC_Clusters))

temp <- ifelse(temp=="9","8",temp)
temp <- ifelse(temp=="11","8",temp)
temp <- ifelse(temp=="6","1",temp)
temp <- ifelse(temp=="14","1",temp)
temp <- ifelse(temp=="3","1",temp)
temp <- ifelse(temp=="12","1",temp)
temp <- ifelse(temp=="22","10",temp)
temp <- ifelse(temp=="25","17",temp)
temp <- ifelse(temp=="19","13",temp)

temp <- ifelse(temp=="1","000",temp)
temp <- ifelse(temp=="8","111",temp)
temp <- ifelse(temp=="0","222",temp)
temp <- ifelse(temp=="2","333",temp)
temp <- ifelse(temp=="4","444",temp)
temp <- ifelse(temp=="5","555",temp)
temp <- ifelse(temp=="10","666",temp)
temp <- ifelse(temp=="7","777",temp)
temp <- ifelse(temp=="13","888",temp)
temp <- ifelse(temp=="17","999",temp)
temp <- ifelse(temp=="15","101010",temp)
temp <- ifelse(temp=="16","111111",temp)
temp <- ifelse(temp=="18","121212",temp)
temp <- ifelse(temp=="20","131313",temp)
temp <- ifelse(temp=="21","141414",temp)
temp <- ifelse(temp=="23","151515",temp)
temp <- ifelse(temp=="24","161616",temp)
temp <- ifelse(temp=="26","171717",temp)
temp <- ifelse(temp=="27","181818",temp)
temp <- ifelse(temp=="28","191919",temp)
temp <- ifelse(temp=="29","202020",temp)
temp <- ifelse(temp=="30","212121",temp)

temp <- ifelse(temp=="000","0",temp)
temp <- ifelse(temp=="111","1",temp)
temp <- ifelse(temp=="222","2",temp)
temp <- ifelse(temp=="333","3",temp)
temp <- ifelse(temp=="444","4",temp)
temp <- ifelse(temp=="555","5",temp)
temp <- ifelse(temp=="666","6",temp)
temp <- ifelse(temp=="777","7",temp)
temp <- ifelse(temp=="888","8",temp)
temp <- ifelse(temp=="999","9",temp)
temp <- ifelse(temp=="101010","10",temp)
temp <- ifelse(temp=="111111","11",temp)
temp <- ifelse(temp=="121212","12",temp)
temp <- ifelse(temp=="131313","13",temp)
temp <- ifelse(temp=="141414","14",temp)
temp <- ifelse(temp=="151515","15",temp)
temp <- ifelse(temp=="161616","16",temp)
temp <- ifelse(temp=="171717","17",temp)
temp <- ifelse(temp=="181818","18",temp)
temp <- ifelse(temp=="191919","19",temp)
temp <- ifelse(temp=="202020","20",temp)
temp <- ifelse(temp=="212121","21",temp)

all.normalized.atac.final@meta.data$Final_ATAC_Clusters <- factor(temp,levels=as.character(c(0:21)))
Idents(all.normalized.atac.final) <- all.normalized.atac.final@meta.data$Final_ATAC_Clusters

################################################################################
# generate umap describing final clusters
################################################################################

DimPlot(all.normalized.atac.final, label=TRUE,group.by="Final_ATAC_Clusters")

svg("3_umap_resolution_1.5_post_recoding_pre_pruning.svg")
DimPlot(all.normalized.atac.final, label=TRUE,group.by="Final_ATAC_Clusters")
dev.off()

################################################################################
# perform cluster by cluster pruning
################################################################################

to.do <- names((table(Idents(all.normalized.atac.final))))
length(to.do)

to.remove <- NULL

# cluster 0
i <- 1
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
svg("4_cluster_0_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_0_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 1
i <- 2
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2.25,lty=2)
abline(h=2.25,lty=2)
svg("4_cluster_1_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2.25,lty=2)
abline(h=2.25,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>2.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_1_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 2
i <- 3
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.75,lty=2)
svg("4_cluster_2_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.75,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>1.75
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_2_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 3
i <- 4
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
svg("4_cluster_3_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_3_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 4
i <- 5
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2.25,lty=2)
abline(h=2,lty=2)
svg("4_cluster_4_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2.25,lty=2)
abline(h=2,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_4_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 5
i <- 6
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.75,lty=2)
svg("4_cluster_5_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.75,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>1.75
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_5_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 6
i <- 7
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.5,lty=2)
svg("4_cluster_6_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.5,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_6_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 7
i <- 8
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=1.25,lty=2)
svg("4_cluster_7_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=1.25,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_7_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 8
i <- 9
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=0.75,lty=2)
abline(h=1.5,lty=2)
svg("4_cluster_8_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=0.75,lty=2)
abline(h=1.5,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>0.75
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_8_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 9
i <- 10
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
svg("4_cluster_9_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_9_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 10
i <- 11
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
svg("4_cluster_10_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_10_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 11
i <- 12
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.5,lty=2)
svg("4_cluster_11_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=1.5,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_11_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 12
i <- 13
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=1,lty=2)
svg("4_cluster_12_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_12_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 13
i <- 14
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=2,lty=2)
svg("4_cluster_13_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=2,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_13_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 14
i <- 15
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
svg("4_cluster_14_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_14_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 15
i <- 16
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.25,lty=2)
abline(h=1,lty=2)
svg("4_cluster_15_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1.25,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1.25
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_15_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 16
i <- 17
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
svg("4_cluster_16_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_16_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 17
i <- 18
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
svg("4_cluster_17_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_17_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 18
i <- 19
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=0.5,lty=2)
abline(h=1,lty=2)
svg("4_cluster_18_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=0.5,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>0.5
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_18_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 19
i <- 20
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=1,lty=2)
svg("4_cluster_19_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=1,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_19_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

# cluster 20
i <- 21
temp2 <- all.normalized.atac.final[,(all.normalized.atac.final@meta.data$Final_ATAC_Clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="Final_ATAC_Clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=0.75,lty=2)
abline(h=1.5,lty=2)
svg("4_cluster_20_pruning_decisions.svg")
plot(X, cex = 0.5)
abline(v=0.75,lty=2)
abline(h=1.5,lty=2)
dev.off()
temp10 <- X
temp10[,1] <- temp10[,1]>0.75
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
svg("5_cluster_20_post_pruning_look.svg")
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i]," Outliers"),sep="",collapse="")))
dev.off()
to.remove <- c(to.remove,temp11)

################################################################################
# characterize pruned cells
################################################################################

final.atac.pruned <- all.normalized.atac.final
final.atac.pruned@meta.data$pruned <- colnames(final.atac.pruned)%in%to.remove

DimPlot(final.atac.pruned, label=FALSE,group.by="pruned")

svg("6_umap_resolution_1.5_pruning_decisions.svg")
DimPlot(final.atac.pruned, label=FALSE,group.by="pruned")
dev.off()

################################################################################
# remove pruned cells
################################################################################

final.atac.pruned <- final.atac.pruned[,final.atac.pruned@meta.data$pruned=="FALSE"]

DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")

svg("7_umap_resolution_1.5_post_pruning_pre_final_coding_revisions.svg")
DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")
dev.off()

################################################################################
# revise and assign
################################################################################

# cluster 16
temp2 <- final.atac.pruned[,(final.atac.pruned@meta.data$Final_ATAC_Clusters=="16")]
temp3 <- DimPlot(temp2,label=FALSE,group.by="Final_ATAC_Clusters")
temp3
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- dimnames(temp3$data)[[1]][temp4>(5.5)]
temp66 <- dimnames(temp3$data)[[1]][temp5>(0)]
temp6 <- intersect(temp6,temp66)
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp6
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster 18 Outliers"),sep="",collapse="")))
temp <- final.atac.pruned@meta.data$Final_ATAC_Clusters
names(temp) <- rownames(final.atac.pruned@meta.data)
temptemp <- setdiff(names(temp),temp6)
temp <- temp[temptemp]
temptemp <- as.factor(rep("22",length(temp6)))
names(temptemp) <- temp6
temp <- c(temp,temptemp)
temp <- temp[rownames(final.atac.pruned@meta.data)]
final.atac.pruned@meta.data$Final_ATAC_Clusters <- as.factor(temp)
DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")

# cluster 19
temp2 <- final.atac.pruned[,(final.atac.pruned@meta.data$Final_ATAC_Clusters=="19")]
temp3 <- DimPlot(temp2,label=FALSE,group.by="Final_ATAC_Clusters")
temp3
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- dimnames(temp3$data)[[1]][temp4>(-4.5)]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp6
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster 19 Outliers"),sep="",collapse="")))
temp <- final.atac.pruned@meta.data$Final_ATAC_Clusters
names(temp) <- rownames(final.atac.pruned@meta.data)
temptemp <- setdiff(names(temp),temp6)
temp <- temp[temptemp]
temptemp <- as.factor(rep("23",length(temp6)))
names(temptemp) <- temp6
temp <- c(temp,temptemp)
temp <- temp[rownames(final.atac.pruned@meta.data)]
final.atac.pruned@meta.data$Final_ATAC_Clusters <- as.factor(temp)
DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")

################################################################################
# recode
################################################################################

temp <- as.character(unlist(final.atac.pruned@meta.data$Final_ATAC_Clusters))

rev(sort(table(temp)))

temp <- ifelse(temp=="8","77",temp)
temp <- ifelse(temp=="7","88",temp)
temp <- ifelse(temp=="77","7",temp)
temp <- ifelse(temp=="88","8",temp)

temp <- ifelse(temp=="12","1111",temp)
temp <- ifelse(temp=="11","1212",temp)
temp <- ifelse(temp=="1111","11",temp)
temp <- ifelse(temp=="1212","12",temp)

rev(sort(table(temp)))

temp <- ifelse(temp=="22","1616",temp)
temp <- ifelse(temp=="20","1919",temp)
temp <- ifelse(temp=="16","2020",temp)
temp <- ifelse(temp=="19","2121",temp)
temp <- ifelse(temp=="21","2222",temp)

rev(sort(table(temp)))

temp <- ifelse(temp=="1616","16",temp)
temp <- ifelse(temp=="1919","19",temp)
temp <- ifelse(temp=="2020","20",temp)
temp <- ifelse(temp=="2121","21",temp)
temp <- ifelse(temp=="2222","22",temp)

rev(sort(table(temp)))

final.atac.pruned@meta.data$Final_ATAC_Clusters <- factor(temp,levels=as.character(c(0:23)))

DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")

svg("8_umap_resolution_1.5_post_pruning_post_final_coding_revisions.svg")
DimPlot(final.atac.pruned, label=TRUE,group.by="Final_ATAC_Clusters")
dev.off()

################################################################################
# enumerate number cells per cluster
################################################################################

temp3 <- table(as.character(final.atac.pruned@meta.data$Final_ATAC_Clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:23))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
svg("9_barplot_number_cells_per_cluster_post_final_coding_revisions.svg")
temp3 <- table(as.character(final.atac.pruned@meta.data$Final_ATAC_Clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:23))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()

saveRDS(final.atac.pruned, "atac.post.recoded.revised.rds")

Idents(final.atac.pruned) <- factor(final.atac.pruned@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:23)))
svg("10_umap_post_final_coding_revisions_grouped_by_dataset.svg")
DimPlot(final.atac.pruned, label=FALSE, group.by="dataset")
dev.off()
DimPlot(final.atac.pruned, label=FALSE, group.by="dataset")

Idents(final.atac.pruned) <- factor(final.atac.pruned@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:23)))
svg("11_umap_post_final_coding_revisions_split_by_dataset.svg")
DimPlot(final.atac.pruned, label=FALSE, split.by="dataset",ncol=4)
dev.off()
DimPlot(final.atac.pruned, label=FALSE, split.by="dataset",ncol=4)

level.order <- as.character(c(0:23))
temp <- final.atac.pruned@meta.data
pos.dataset <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="dataset"]
pos.final.atac.clusters <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="Final_ATAC_Clusters"]
temp <- as.data.frame(temp[,c(pos.dataset,pos.final.atac.clusters)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3,4,2)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,3]
temp <- temp[,-c(3)]
temp <- temp[,c(1,3,2)]
dimnames(temp)[[2]] <- c("Sample","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("12_barplot_number_cells_per_sample_per_cluster_post_coding_revisions.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("13_barplot_percent_cells_per_sample_per_cluster_post_coding_revisions.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

################################################################################
# compute gene activities
################################################################################

gene.activities <- GeneActivity(final.atac.pruned)

################################################################################
# add the gene activity matrix to the Seurat object as a new assay
################################################################################

final.atac.pruned[['RNA']] <- CreateAssayObject(counts = gene.activities)
final.atac.pruned <- NormalizeData(
  object = final.atac.pruned,
  assay = 'RNA',
  normalization.method = 'LogNormalize',
  scale.factor = median(final.atac.pruned$nCount_RNA)
)

DefaultAssay(final.atac.pruned) <- 'RNA'
f <- FeaturePlot(
  object = final.atac.pruned,
  features = c('Penk'),
  pt.size = 1,
  max.cutoff = 'q95',
  ncol = 1
)
f

svg("14_umap_gene_activity_overlay_Penk.svg")
print(f)
dev.off()

DefaultAssay(final.atac.pruned) <- 'RNA'
f <- FeaturePlot(
  object = final.atac.pruned,
  features = c('Chgb'),
  pt.size = 1,
  max.cutoff = 'q95',
  ncol = 1
)
f

svg("14_umap_gene_activity_overlay_Chgb.svg")
print(f)
dev.off()

DefaultAssay(final.atac.pruned) <- 'RNA'
f <- FeaturePlot(
  object = final.atac.pruned,
  features = c('Penk','Chgb'),
  pt.size = 1,
  max.cutoff = 'q95',
  ncol = 2
)
f

svg("15_umap_gene_activity_overlay_Penk_Chgb.svg",width=12)
print(f)
dev.off()

f <- DotPlot(
  final.atac.pruned,
  assay = "RNA",
  features=c('Penk','Chgb'),
  group.by = "Final_ATAC_Clusters"
)
f

svg("16_dotplot_gene_activity_Penk_Chgb.svg")
print(f)
dev.off()

saveRDS(final.atac.pruned, file = "atac.post.gene.activity.add.rds")

################################################################################
# load GEX final object
################################################################################

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/GEX")

final.annotated.harmony.go <- readRDS("final.curated.harmony.go_20230612.rds")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC")

################################################################################
# find trasnfer anchors between GEX and ATAC objects
# https://stuartlab.org/signac/articles/pbmc_vignette#integrating-with-scrna-seq-data
################################################################################

final.annotated.harmony.go <- FindVariableFeatures(
  object = final.annotated.harmony.go,
  nfeatures = 5000
)

DefaultAssay(final.atac.pruned) <- 'RNA'

transfer.anchors <- FindTransferAnchors(
  reference = final.annotated.harmony.go,
  query = final.atac.pruned,
  reduction = 'cca',
  features = intersect(VariableFeatures(final.annotated.harmony.go),rownames(final.atac.pruned))
)

final.predicted.atac.labels <- TransferData(
  anchorset = transfer.anchors,
  refdata = final.annotated.harmony.go$final.annotations,
  weight.reduction = final.atac.pruned[['lsi']],
  dims = 2:20
)

names(final.predicted.atac.labels) <- c("gex_label_predicted.id",
"gex_label_prediction.score.Glutamatergic_L2.3_IT",
"gex_label_prediction.score.GABAergic_Lamp5",
"gex_label_prediction.score.Non.Neuronal_Oligo",
"gex_label_prediction.score.Glutamatergic_L6b",
"gex_label_prediction.score.Glutamatergic_L5_ET",
"gex_label_prediction.score.Non.Neuronal_Astro",
"gex_label_prediction.score.GABAergic_Vip",
"gex_label_prediction.score.Glutamatergic_L5_IT",
"gex_label_prediction.score.Non.Neuronal_Endo",
"gex_label_prediction.score.GABAergic_Meis2",
"gex_label_prediction.score.Non.Neuronal_OPC",
"gex_label_prediction.score.GABAergic_Sst",
"gex_label_prediction.score.Non.Neuronal_Micro.PVM",
"gex_label_prediction.score.Non.Neuronal_Peri",
"gex_label_prediction.score.Glutamatergic_L5.6_NP",
"gex_label_prediction.score.Non.Neuronal_VLMC",
"gex_label_prediction.score.max")

final.atac.pruned <- AddMetaData(object = final.atac.pruned, metadata = final.predicted.atac.labels)

plot1 <- DimPlot(final.annotated.harmony.go, group.by = 'final.annotations', label = TRUE, repel = TRUE) + ggtitle('scRNA-seq')
plot2 <- DimPlot(final.atac.pruned, group.by = 'gex_label_predicted.id', label = TRUE, repel = TRUE) + ggtitle('scATAC-seq')
plot3 <- plot1 + plot2
plot3
svg("1_umap_post_integration_by_gex_annotation.svg",width=20,height=10)
print(plot3)
dev.off()

################################################################################
# characterize clusters by label
################################################################################

level.order <- as.character(c(0:23))

temp <- final.atac.pruned@meta.data
pos.cluster <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="Final_ATAC_Clusters"]
pos.predicted.id <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="gex_label_predicted.id"]
temp <- as.data.frame(temp[,c(pos.predicted.id,pos.cluster)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
new.temptemp <- temptemp
for(i in 1:length(temptemp)) {
	print(i)
	t.0 <- temptemp[[i]]
	t.1 <- t.0[length(t.0)]
	t.2 <- t.0[-c(length(t.0))]
	t.3 <- paste(t.2,sep="_",collapse="_")
	new.temptemp[[i]] <- c(t.3,t.1)
}
temptemp <- new.temptemp
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp <- temp[,c(4,3,2)]
dimnames(temp)[[2]] <- c("Cluster","Label","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$Label <- factor(as.character(temp$Label))
temp$nCells <- as.numeric(as.character(temp$nCells))

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

svg("2_barplot_number_cells_per_gex_annoation_per_atac_cluster.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

svg("3_barplot_percent_cells_per_gex_annoation_per_atac_cluster.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

write.table(temp,"4_table_accounting_ncells_per_gex_annotation_per_atac_cluster.txt",sep="\t")

final.predicted.atac.gex.clusters <- TransferData(
  anchorset = transfer.anchors,
  refdata = final.annotated.harmony.go$final.clusters,
  weight.reduction = final.atac.pruned[['lsi']],
  dims = 2:20
)

names(final.predicted.atac.gex.clusters) <- c("gex_cluster_predicted.id",
"gex_cluster_prediction.score.1",
"gex_cluster_prediction.score.0",
"gex_cluster_prediction.score.21",
"gex_cluster_prediction.score.9",
"gex_cluster_prediction.score.23",
"gex_cluster_prediction.score.14",
"gex_cluster_prediction.score.8",
"gex_cluster_prediction.score.5",
"gex_cluster_prediction.score.22",
"gex_cluster_prediction.score.10",
"gex_cluster_prediction.score.18",
"gex_cluster_prediction.score.30",
"gex_cluster_prediction.score.17",
"gex_cluster_prediction.score.15",
"gex_cluster_prediction.score.20",
"gex_cluster_prediction.score.12",
"gex_cluster_prediction.score.19",
"gex_cluster_prediction.score.13",
"gex_cluster_prediction.score.24",
"gex_cluster_prediction.score.29",
"gex_cluster_prediction.score.28",
"gex_cluster_prediction.score.25",
"gex_cluster_prediction.score.26",
"gex_cluster_prediction.score.27",
"gex_cluster_prediction.score.max")

final.atac.pruned <- AddMetaData(object = final.atac.pruned, metadata = final.predicted.atac.gex.clusters)

plot1 <- DimPlot(final.annotated.harmony.go, group.by = 'final.clusters', label = TRUE, repel = TRUE) + ggtitle('scRNA-seq')

final.atac.pruned@meta.data$gex_cluster_predicted.id <- factor(final.atac.pruned@meta.data$gex_cluster_predicted.id,levels=as.character(c("0","1","5","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29","30")))

plot2 <- DimPlot(final.atac.pruned, group.by = 'gex_cluster_predicted.id', label = TRUE, repel = TRUE) + ggtitle('scATAC-seq')
plot3 <- plot1 + plot2
plot3
svg("5_umap_post_integration_by_gex_cluster.svg",width=20,height=10)
print(plot3)
dev.off()

################################################################################
# characterize clusters by label
################################################################################

level.order <- as.character(c(0:23))

temp <- final.atac.pruned@meta.data
pos.cluster <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="Final_ATAC_Clusters"]
pos.predicted.id <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="gex_cluster_predicted.id"]
temp <- as.data.frame(temp[,c(pos.predicted.id,pos.cluster)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
new.temptemp <- temptemp
for(i in 1:length(temptemp)) {
	print(i)
	t.0 <- temptemp[[i]]
	t.1 <- t.0[length(t.0)]
	t.2 <- t.0[-c(length(t.0))]
	t.3 <- paste(t.2,sep="_",collapse="_")
	new.temptemp[[i]] <- c(t.3,t.1)
}
temptemp <- new.temptemp
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp <- temp[,c(4,3,2)]
dimnames(temp)[[2]] <- c("Cluster","Label","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$Label <- factor(as.character(temp$Label))
temp$nCells <- as.numeric(as.character(temp$nCells))

gex.cluster <- as.character(c("0","1","5","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29","30"))

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = factor(Label,level=gex.cluster))) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

svg("6_barplot_number_cells_per_gex_cluster_per_atac_cluster.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = factor(Label,level=gex.cluster))) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = factor(Label,level=gex.cluster))) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

svg("7_barplot_percent_cells_per_gex_cluster_per_atac_cluster.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = factor(Label,level=gex.cluster))) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

write.table(temp,"8_table_accounting_ncells_per_gex_cluster_per_atac_cluster.txt",sep="\t")

saveRDS(final.annotated.harmony.go,"gex_used_for_atac_label_transfer.rds")
saveRDS(final.atac.pruned,"atac_post_gex_label_transfer.rds")

################################################################################
# perform differential testing for clusters of interest between GG and LL
################################################################################

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/rds")

final.annotated.harmony.go <- readRDS("gex_used_for_atac_label_transfer.rds")
final.atac.pruned <- readRDS("atac_post_gex_label_transfer.rds")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/io")

annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevels(annotations) <- paste0('chr', seqlevels(annotations))
genome(annotations) <- "mm10"

# cluster 0

final.atac.pruned.c0 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="0"]

DefaultAssay(final.atac.pruned.c0) <- 'ATAC'

Annotation(final.atac.pruned.c0) <- annotations

temp <- final.atac.pruned.c0@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c0@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c0) <- factor(final.atac.pruned.c0@meta.data$datatype)
atac.cluster.0.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c0,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.0.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c0, regions=rownames(atac.cluster.0.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.0.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_0_DG_vs_LL")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_0_annotated.xlsx", overwrite = TRUE)

atac.cluster.0.diffx.peaks.annotated <- temp
head(atac.cluster.0.diffx.peaks.annotated)

pdf("2_Top_50_differential_accessible_peaks_cluster_0_DG_vs_LL.pdf")
for(i in 1:50) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c0,
	features = rownames(atac.cluster.0.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c0,
	features = rownames(atac.cluster.0.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c0, "atac_cluster_0_DG_vs_LL.rds")

# cluster 1

final.atac.pruned.c1 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="1"]

DefaultAssay(final.atac.pruned.c1) <- 'ATAC'

Annotation(final.atac.pruned.c1) <- annotations

temp <- final.atac.pruned.c1@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c1@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c1) <- factor(final.atac.pruned.c1@meta.data$datatype)
atac.cluster.1.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c1,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.1.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c1, regions=rownames(atac.cluster.1.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.1.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_1_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_1_annotated.xlsx", overwrite = TRUE)

atac.cluster.1.diffx.peaks.annotated <- temp
head(atac.cluster.1.diffx.peaks.annotated)

pdf("2_Top_50_differential_accessible_peaks_cluster_1_DG_vs_LL.pdf")
for(i in 1:50) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c1,
	features = rownames(atac.cluster.1.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c1,
	features = rownames(atac.cluster.1.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c1, "atac_cluster_1_DG_vs_LL.rds")

# cluster 2

final.atac.pruned.c2 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="2"]

DefaultAssay(final.atac.pruned.c2) <- 'ATAC'

Annotation(final.atac.pruned.c2) <- annotations

temp <- final.atac.pruned.c2@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c2@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c2) <- factor(final.atac.pruned.c2@meta.data$datatype)
atac.cluster.2.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c2,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.2.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c2, regions=rownames(atac.cluster.2.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.2.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_2_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_2_annotated.xlsx", overwrite = TRUE)

atac.cluster.2.diffx.peaks.annotated <- temp
head(atac.cluster.2.diffx.peaks.annotated)

pdf("2_Differential_accessible_peaks_cluster_2_DG_vs_LL.pdf")
for(i in 1:1) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c2,
	features = rownames(atac.cluster.2.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c2,
	features = rownames(atac.cluster.2.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c2, "atac_cluster_2_DG_vs_LL.rds")

# cluster 3

final.atac.pruned.c3 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="3"]

DefaultAssay(final.atac.pruned.c3) <- 'ATAC'

Annotation(final.atac.pruned.c3) <- annotations

temp <- final.atac.pruned.c3@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c3@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c3) <- factor(final.atac.pruned.c3@meta.data$datatype)
atac.cluster.3.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c3,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.3.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c3, regions=rownames(atac.cluster.3.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.3.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_3_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_3_annotated.xlsx", overwrite = TRUE)

atac.cluster.3.diffx.peaks.annotated <- temp
head(atac.cluster.3.diffx.peaks.annotated)

pdf("2_Differential_accessible_peaks_cluster_3_DG_vs_LL.pdf")
for(i in 1:3) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c3,
	features = rownames(atac.cluster.3.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c3,
	features = rownames(atac.cluster.3.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c3, "atac_cluster_3_DG_vs_LL.rds")

# cluster 4

final.atac.pruned.c4 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="4"]

DefaultAssay(final.atac.pruned.c4) <- 'ATAC'

Annotation(final.atac.pruned.c4) <- annotations

temp <- final.atac.pruned.c4@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c4@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c4) <- factor(final.atac.pruned.c4@meta.data$datatype)
atac.cluster.4.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c4,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.4.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c4, regions=rownames(atac.cluster.4.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.4.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_4_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_4_annotated.xlsx", overwrite = TRUE)

atac.cluster.4.diffx.peaks.annotated <- temp
head(atac.cluster.4.diffx.peaks.annotated)

pdf("2_Top_50_differential_accessible_peaks_cluster_4_DG_vs_LL.pdf")
for(i in 1:50) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c4,
	features = rownames(atac.cluster.4.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c4,
	features = rownames(atac.cluster.4.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c4, "atac_cluster_4_DG_vs_LL.rds")

# cluster 5

final.atac.pruned.c5 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="5"]

DefaultAssay(final.atac.pruned.c5) <- 'ATAC'

Annotation(final.atac.pruned.c5) <- annotations

temp <- final.atac.pruned.c5@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c5@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c5) <- factor(final.atac.pruned.c5@meta.data$datatype)
atac.cluster.5.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c5,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.5.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c5, regions=rownames(atac.cluster.5.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.5.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_5_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_5_annotated.xlsx", overwrite = TRUE)

atac.cluster.5.diffx.peaks.annotated <- temp
head(atac.cluster.5.diffx.peaks.annotated)

pdf("2_Top_50_differential_accessible_peaks_cluster_5_DG_vs_LL.pdf")
for(i in 1:50) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c5,
	features = rownames(atac.cluster.5.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c5,
	features = rownames(atac.cluster.5.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c5, "atac_cluster_5_DG_vs_LL.rds")

# cluster 12

final.atac.pruned.c12 <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters=="12"]

DefaultAssay(final.atac.pruned.c12) <- 'ATAC'

Annotation(final.atac.pruned.c12) <- annotations

temp <- final.atac.pruned.c12@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
final.atac.pruned.c12@meta.data$datatype <- factor(temp)

Idents(final.atac.pruned.c12) <- factor(final.atac.pruned.c12@meta.data$datatype)
atac.cluster.12.diffx.peaks <- FindMarkers(
  object = final.atac.pruned.c12,
  ident.1 = "DG", 
  ident.2 = "LL",
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.12.diffx.peaks)

temp <- ClosestFeature(final.atac.pruned.c12, regions=rownames(atac.cluster.12.diffx.peaks),annotation=annotations)
dimnames(temp)[[1]] <- temp$query_region
temp <- cbind(atac.cluster.12.diffx.peaks[dimnames(temp)[[1]],],temp)
wb <- createWorkbook("1_differential_accessible_peak_test_results_cluster_12_DG_vs_LL_annotated")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", temp, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_accessible_peak_test_results_cluster_12_annotated.xlsx", overwrite = TRUE)

atac.cluster.12.diffx.peaks.annotated <- temp
head(atac.cluster.12.diffx.peaks.annotated)

pdf("2_Top_50_differential_accessible_peaks_cluster_12_DG_vs_LL.pdf")
for(i in 1:50) {
	plot1 <- VlnPlot(
	object = final.atac.pruned.c12,
	features = rownames(atac.cluster.12.diffx.peaks.annotated)[i],
	pt.size = 1,
	idents = as.character(c("DG","LL"))
	)

	plot2 <- FeaturePlot(
	object = final.atac.pruned.c12,
	features = rownames(atac.cluster.12.diffx.peaks.annotated)[i],
	pt.size = 1,
	max.cutoff = 'q95'
	)

	plot3 <- plot1 + plot2
	print(plot3)
}
dev.off()

saveRDS(final.atac.pruned.c12, "atac_cluster_12_DG_vs_LL.rds")

################################################################################
# perform trajectory analysis
################################################################################

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/rds")

final.annotated.harmony.go <- readRDS("gex_used_for_atac_label_transfer.rds")
final.atac.pruned <- readRDS("atac_post_gex_label_transfer.rds")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/io")

annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevels(annotations) <- paste0('chr', seqlevels(annotations))
genome(annotations) <- "mm10"

traj.atac <- final.atac.pruned[,final.atac.pruned@meta.data$Final_ATAC_Clusters%in%c("0","1","2","3","4","5","12")]

Annotation(traj.atac) <- annotations

temp <- traj.atac@meta.data$dataset
temp <- ifelse(temp=="DG.F1.VV","DG",temp)
temp <- ifelse(temp=="DG.F2.VV","DG",temp)
temp <- ifelse(temp=="DG.M1.VV","DG",temp)
temp <- ifelse(temp=="DG.M2.VV","DG",temp)
temp <- ifelse(temp=="LL.F1.DG","LL",temp)
temp <- ifelse(temp=="LL.F2.DG","LL",temp)
temp <- ifelse(temp=="LL.M1.DG","LL",temp)
temp <- ifelse(temp=="LL.M2.DG","LL",temp)
traj.atac@meta.data$datatype <- factor(temp)

Idents(traj.atac) <- factor(traj.atac@meta.data$datatype)

level.order <- as.character(c(0:5,12))
temp <- traj.atac@meta.data
pos.dataset <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="datatype"]
pos.final.atac.clusters <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="Final_ATAC_Clusters"]
temp <- as.data.frame(temp[,c(pos.dataset,pos.final.atac.clusters)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3,4,2)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,3]
temp <- temp[,-c(3)]
temp <- temp[,c(1,3,2)]
dimnames(temp)[[2]] <- c("Genotype","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("1_barplot_number_cells_per_genotype_per_cluster.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("2_barplot_percent_cells_per_genotype_per_cluster.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

traj.atac <- FindTopFeatures(traj.atac, min.cells = 10)
traj.atac <- RunTFIDF(traj.atac)
traj.atac <- RunSVD(traj.atac, n = 100)

p <- ElbowPlot(traj.atac,ndims=50,reduction = "lsi")
svg("3_scree_plot.svg")
p
dev.off()
p

d <- DepthCor(traj.atac)
d
svg("4_depthcor_plot.svg")
print(d)
dev.off()

traj.atac <- RunUMAP(
  traj.atac,
  reduction = "lsi",
  dims = 2:10,
  reduction.name = "UMAP"
)
traj.atac <- FindNeighbors(traj.atac, dims = 2:10, reduction = "lsi")

traj.atac <- FindClusters(
  object = traj.atac,
  algorithm = 3,
  resolution = c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5),
  verbose = FALSE
)

svg("5_clustree_results.svg",width=10,height=20)
clustree(traj.atac,prefix="ATAC_snn_res.")
dev.off()
clustree(traj.atac,prefix="ATAC_snn_res.")

pdf("6_umap_plots_per_cluster_resolution.pdf")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.04)))))
traj.atac@meta.data$ATAC_snn_res.0.04 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.04, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.04")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.05)))))
traj.atac@meta.data$ATAC_snn_res.0.05 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.05, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.05")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.06)))))
traj.atac@meta.data$ATAC_snn_res.0.06 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.06, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.06")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.07)))))
traj.atac@meta.data$ATAC_snn_res.0.07 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.07, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.07")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.08)))))
traj.atac@meta.data$ATAC_snn_res.0.08 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.08, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.08")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.09)))))
traj.atac@meta.data$ATAC_snn_res.0.09 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.09, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.09")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.1)))))
traj.atac@meta.data$ATAC_snn_res.0.1 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.1, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.1")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.2)))))
traj.atac@meta.data$ATAC_snn_res.0.2 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.2, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.2")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.3)))))
traj.atac@meta.data$ATAC_snn_res.0.3 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.3, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.3")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.4)))))
traj.atac@meta.data$ATAC_snn_res.0.4 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.4, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.4")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.5)))))
traj.atac@meta.data$ATAC_snn_res.0.5 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.5, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.5")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.6)))))
traj.atac@meta.data$ATAC_snn_res.0.6 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.6, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.6")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.7)))))
traj.atac@meta.data$ATAC_snn_res.0.7 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.7, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.7")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.8)))))
traj.atac@meta.data$ATAC_snn_res.0.8 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.8, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.8")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.0.9)))))
traj.atac@meta.data$ATAC_snn_res.0.9 <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.9, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.0.9")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1)))))
traj.atac@meta.data$ATAC_snn_res.1 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.1)))))
traj.atac@meta.data$ATAC_snn_res.1.1 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.1, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.1")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.2)))))
traj.atac@meta.data$ATAC_snn_res.1.2 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.2, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.2")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.3)))))
traj.atac@meta.data$ATAC_snn_res.1.3 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.3, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.3")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.4)))))
traj.atac@meta.data$ATAC_snn_res.1.4 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.4, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.4")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.5)))))
traj.atac@meta.data$ATAC_snn_res.1.5 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.5, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.5")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.6)))))
traj.atac@meta.data$ATAC_snn_res.1.6 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.6, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.6")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.7)))))
traj.atac@meta.data$ATAC_snn_res.1.7 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.7, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.7")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.8)))))
traj.atac@meta.data$ATAC_snn_res.1.8 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.8, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.8")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.1.9)))))
traj.atac@meta.data$ATAC_snn_res.1.9 <- factor(x=traj.atac@meta.data$ATAC_snn_res.1.9, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.1.9")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2)))))
traj.atac@meta.data$ATAC_snn_res.2 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2.1)))))
traj.atac@meta.data$ATAC_snn_res.2.1 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2.1, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2.1")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2.2)))))
traj.atac@meta.data$ATAC_snn_res.2.2 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2.2, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2.2")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2.3)))))
traj.atac@meta.data$ATAC_snn_res.2.3 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2.3, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2.3")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2.4)))))
traj.atac@meta.data$ATAC_snn_res.2.4 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2.4, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2.4")

my_levels <- as.character(c(0:length(table(as.character(traj.atac@meta.data$ATAC_snn_res.2.5)))))
traj.atac@meta.data$ATAC_snn_res.2.5 <- factor(x=traj.atac@meta.data$ATAC_snn_res.2.5, levels=my_levels)
DimPlot(traj.atac, label=TRUE,group.by="ATAC_snn_res.2.5")

dev.off()

saveRDS(traj.atac, "atac.post.clustering.pre.traj.fit.rds")

fff <- c("Camk4","Igfbpl1","Fxyd7","Dcx","Calb2","Calb1","Ntng1","Penk", "Sorcs2")

pdf("7_umap_plots_with_gene_of_interest_overlay.pdf")
for (i in 1:length(fff)) {
	p <- FeaturePlot(
		object = traj.atac,
		features = fff[i] ,
		pt.size = 1,
		max.cutoff = 'q95')
	print(p)
}
dev.off()

################################################################################
# select resolution
################################################################################

traj.atac@meta.data$Final_ATAC_Clusters <- factor(x=traj.atac@meta.data$ATAC_snn_res.0.5, levels=as.character(c(0:10)))

################################################################################
# recode
################################################################################

temp <- as.character(unlist(traj.atac@meta.data$Final_ATAC_Clusters))

temp <- ifelse(temp=="9","5",temp)

temp <- ifelse(temp=="0","000",temp)
temp <- ifelse(temp=="1","111",temp)
temp <- ifelse(temp=="5","222",temp)
temp <- ifelse(temp=="2","333",temp)
temp <- ifelse(temp=="3","444",temp)
temp <- ifelse(temp=="4","555",temp)
temp <- ifelse(temp=="6","666",temp)
temp <- ifelse(temp=="7","777",temp)
temp <- ifelse(temp=="8","888",temp)
temp <- ifelse(temp=="10","999",temp)

temp <- ifelse(temp=="000","0",temp)
temp <- ifelse(temp=="111","1",temp)
temp <- ifelse(temp=="222","2",temp)
temp <- ifelse(temp=="333","3",temp)
temp <- ifelse(temp=="444","4",temp)
temp <- ifelse(temp=="555","5",temp)
temp <- ifelse(temp=="666","6",temp)
temp <- ifelse(temp=="777","7",temp)
temp <- ifelse(temp=="888","8",temp)
temp <- ifelse(temp=="999","9",temp)

traj.atac@meta.data$Final_ATAC_Clusters <- factor(temp,levels=as.character(c(0:9)))
Idents(traj.atac) <- traj.atac@meta.data$Final_ATAC_Clusters

################################################################################
# generate umap describing final clusters
################################################################################

DimPlot(traj.atac, label=TRUE,group.by="Final_ATAC_Clusters")

svg("8_umap_resolution_0.5_post_recoding.svg")
DimPlot(traj.atac, label=TRUE,group.by="Final_ATAC_Clusters")
dev.off()

################################################################################
# enumerate number cells per cluster
################################################################################

temp3 <- table(as.character(traj.atac@meta.data$Final_ATAC_Clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:9))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
svg("9_barplot_number_cells_per_cluster_post_recoding.svg")
temp3 <- table(as.character(traj.atac@meta.data$Final_ATAC_Clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:9))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()

Idents(traj.atac) <- factor(traj.atac@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:9)))
svg("10_umap_post_post_recoding_grouped_by_dataset.svg")
DimPlot(traj.atac, label=FALSE, group.by="dataset")
dev.off()
DimPlot(traj.atac, label=FALSE, group.by="dataset")

Idents(traj.atac) <- factor(traj.atac@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:9)))
svg("11_umap_post_post_recoding_split_by_dataset.svg")
DimPlot(traj.atac, label=FALSE, split.by="dataset",ncol=4)
dev.off()
DimPlot(traj.atac, label=FALSE, split.by="dataset",ncol=4)

level.order <- as.character(c(0:9))
temp <- traj.atac@meta.data
pos.dataset <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="dataset"]
pos.final.atac.clusters <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="Final_ATAC_Clusters"]
temp <- as.data.frame(temp[,c(pos.dataset,pos.final.atac.clusters)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3,4,2)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,3]
temp <- temp[,-c(3)]
temp <- temp[,c(1,3,2)]
dimnames(temp)[[2]] <- c("Sample","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("12_barplot_number_cells_per_sample_per_cluster_post_recoding.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("13_barplot_percent_cells_per_sample_per_cluster_post_recoding.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

level.order <- as.character(c(0:9))
temp <- traj.atac@meta.data
pos.dataset <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="datatype"]
pos.final.atac.clusters <- c(1:length(names(traj.atac@meta.data)))[names(traj.atac@meta.data)=="Final_ATAC_Clusters"]
temp <- as.data.frame(temp[,c(pos.dataset,pos.final.atac.clusters)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3,4,2)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,3]
temp <- temp[,-c(3)]
temp <- temp[,c(1,3,2)]
dimnames(temp)[[2]] <- c("Genotype","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("14_barplot_number_cells_per_genotype_per_cluster_post_recoding.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("15_barplot_percent_cells_per_genotype_per_cluster_post_recoding.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Genotype)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

Idents(traj.atac) <- factor(traj.atac@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:9)))
svg("16_umap_post_recoding_split_by_mutation.svg")
DimPlot(traj.atac, label=FALSE, group.by="datatype")
dev.off()
DimPlot(traj.atac, label=FALSE, group.by="datatype")

Idents(traj.atac) <- factor(traj.atac@meta.data$Final_ATAC_Clusters,levels=as.character(c(0:9)))
svg("17_umap_post_recoding_split_by_mutation.svg")
DimPlot(traj.atac, label=FALSE, split.by="datatype",group.by="datatype")
dev.off()
DimPlot(traj.atac, label=FALSE, split.by="datatype",group.by="datatype")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/rds")

traj.atac <- readRDS("atac.post.clustering.pre.traj.fit.rds")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/io")

# traj fit

traj.atac.dg.cds <- SeuratWrappers::as.cell_data_set(traj.atac[,traj.atac@meta.data$datatype=="DG"])
traj.atac.dg.cds <- cluster_cells(cds = traj.atac.dg.cds, reduction_method = "UMAP")
traj.atac.dg.cds <- learn_graph(traj.atac.dg.cds, use_partition = TRUE)

traj.atac.ll.cds <- SeuratWrappers::as.cell_data_set(traj.atac[,traj.atac@meta.data$datatype=="LL"])
traj.atac.ll.cds <- cluster_cells(cds = traj.atac.ll.cds, reduction_method = "UMAP")
traj.atac.ll.cds <- learn_graph(traj.atac.ll.cds, use_partition = TRUE)

p <- plot_cells(
  cds = traj.atac.dg.cds,
  color_cells_by = "Final_ATAC_Clusters",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = FALSE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2
)
svg("18_umap_for_dg_post_traj_fit_pre_root_selection.svg")
print(p)
dev.off()

p <- plot_cells(
  cds = traj.atac.ll.cds,
  color_cells_by = "Final_ATAC_Clusters",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = FALSE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2
)
svg("19_umap_for_ll_post_traj_fit_pre_root_selection.svg")
print(p)
dev.off()

traj.atac.dg.cds <- order_cells(traj.atac.dg.cds, reduction_method = "UMAP")
traj.atac.ll.cds <- order_cells(traj.atac.ll.cds, reduction_method = "UMAP")

p <- plot_cells(
  cds = traj.atac.dg.cds,
  color_cells_by = "Final_ATAC_Clusters",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = TRUE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2,
)
svg("20_umap_for_dg_post_traj_fit_post_root_selection.svg")
print(p)
dev.off()

p <- plot_cells(
  cds = traj.atac.ll.cds,
  color_cells_by = "Final_ATAC_Clusters",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = TRUE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2,
)
svg("21_umap_for_ll_post_traj_fit_post_root_selection.svg")
print(p)
dev.off()

p1 <- plot_cells(
  cds = traj.atac.dg.cds,
  color_cells_by = "pseudotime",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = TRUE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2,
)
svg("22_umap_for_dg_with_pseudotime_overlay.svg")
print(p1)
dev.off()

p2 <- plot_cells(
  cds = traj.atac.ll.cds,
  color_cells_by = "pseudotime",
  show_trajectory_graph = TRUE,
  cell_size = 1,
  label_roots = TRUE,
  label_leaves = FALSE,
  label_branch_points = FALSE,
  trajectory_graph_segment_size = 2,
)
svg("23_umap_for_ll_with_pseudotime_overlay.svg")
print(p2)
dev.off()

p3 <- p1 + p2
svg("24_side_by_side_umap_for_dg_ll_with_pseudotime_overlay.svg",width=20)
print(p3)
dev.off()

traj.atac <- AddMetaData(
  object = traj.atac,
  metadata = traj.atac.dg.cds@principal_graph_aux@listData$UMAP$pseudotime,
  col.name = "dg_pseudotime"
)

traj.atac <- AddMetaData(
  object = traj.atac,
  metadata = traj.atac.ll.cds@principal_graph_aux@listData$UMAP$pseudotime,
  col.name = "ll_pseudotime"
)

saveRDS(traj.atac, "atac.post.clustering.post.traj.fit.rds")
saveRDS(traj.atac.dg.cds, "atac.monocle3.dg.traj.fit.object.rds")
saveRDS(traj.atac.ll.cds, "atac.monocle3.ll.traj.fit.object.rds")

# test correlation betweeen pseudotime and gene activity

traj.atac.dg.post.traj <- traj.atac[,traj.atac@meta.data$datatype=="DG"]
DefaultAssay(traj.atac.dg.post.traj) <- 'RNA'
temp <- GetAssayData(traj.atac.dg.post.traj,"RNA")
dg.ga.data <- traj.atac.dg.post.traj@meta.data$dg_pseudotime
cor.test.dg.results <- NULL
for (i in 1:dim(temp)[1]) {
	print(i)
	temptemp <- temp[i,]
	if(sum(temptemp>0)>100) {
		temptemp <- cor.test(temptemp[temptemp>0],dg.ga.data[temptemp>0])
		temptemp <- c(dimnames(temp)[[1]][i],as.numeric(temptemp$estimate),as.numeric(temptemp$p.value))
		cor.test.dg.results <- rbind(cor.test.dg.results,temptemp)
	}
}
cor.test.dg.results <- cbind(cor.test.dg.results,p.adjust(as.numeric(cor.test.dg.results[,3]),method="BH"))
dimnames(cor.test.dg.results)[[2]] <- c("Gene","Correlation","Uncorrected_Pvalue","BH_FDR_Corrected_Pvalue")
dimnames(cor.test.dg.results)[[1]] <- cor.test.dg.results[,1]
cor.test.dg.results <- cor.test.dg.results[,-c(1)]
wb <- createWorkbook("25_atac_dg_traj_gene_activity_cor_testing_results")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", cor.test.dg.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "25_atac_dg_traj_gene_activity_cor_testing_results.xlsx", overwrite = TRUE)

traj.atac.ll.post.traj <- traj.atac[,traj.atac@meta.data$datatype=="LL"]
DefaultAssay(traj.atac.ll.post.traj) <- 'RNA'
temp <- GetAssayData(traj.atac.ll.post.traj,"RNA")
ll.ga.data <- traj.atac.ll.post.traj@meta.data$ll_pseudotime
cor.test.ll.results <- NULL
for (i in 1:dim(temp)[1]) {
	print(i)
	temptemp <- temp[i,]
	if(sum(temptemp>0)>100) {
		temptemp <- cor.test(temptemp[temptemp>0],ll.ga.data[temptemp>0])
		temptemp <- c(dimnames(temp)[[1]][i],as.numeric(temptemp$estimate),as.numeric(temptemp$p.value))
		cor.test.ll.results <- rbind(cor.test.ll.results,temptemp)
	}
}
cor.test.ll.results <- cbind(cor.test.ll.results,p.adjust(as.numeric(cor.test.ll.results[,3]),method="BH"))
dimnames(cor.test.ll.results)[[2]] <- c("Gene","Correlation","Uncorrected_Pvalue","BH_FDR_Corrected_Pvalue")
dimnames(cor.test.ll.results)[[1]] <- cor.test.ll.results[,1]
cor.test.ll.results <- cor.test.ll.results[,-c(1)]
wb <- createWorkbook("26_atac_ll_traj_gene_activity_cor_testing_results")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", cor.test.ll.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "26_atac_ll_traj_gene_activity_cor_testing_results.xlsx", overwrite = TRUE)

# plot

temp <- GetAssayData(traj.atac.dg.post.traj,"RNA")
par(mfrow=c(1,2))
plot(dg.ga.data[temp["Pou6f1.1",]>0],temp["Pou6f1.1",][temp["Pou6f1.1",]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main="Pou6f1.1")
lll <- lowess(temp["Pou6f1.1",][temp["Pou6f1.1",]>0]~dg.ga.data[temp["Pou6f1.1",]>0])
lines(lll,lwd=2)
plot(dg.ga.data[temp["Vmn2r18",]>0],temp["Vmn2r18",][temp["Vmn2r18",]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main="Vmn2r18")
lll <- lowess(temp["Vmn2r18",][temp["Vmn2r18",]>0]~dg.ga.data[temp["Vmn2r18",]>0])
lines(lll,lwd=2)

temp <- GetAssayData(traj.atac.ll.post.traj,"RNA")
par(mfrow=c(1,2))
plot(ll.ga.data[temp["1500011K16Rik",]>0],temp["1500011K16Rik",][temp["1500011K16Rik",]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main="1500011K16Rik")
lll <- lowess(temp["1500011K16Rik",][temp["1500011K16Rik",]>0]~ll.ga.data[temp["1500011K16Rik",]>0])
lines(lll,lwd=2)
plot(ll.ga.data[temp["Zfy2",]>0],temp["Zfy2",][temp["Zfy2",]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main="Zfy2")
lll <- lowess(temp["Zfy2",][temp["Zfy2",]>0]~ll.ga.data[temp["Zfy2",]>0])
lines(lll,lwd=2)

saveRDS(cor.test.dg.results,"cor.test.dg.results.rds")
saveRDS(cor.test.ll.results,"cor.test.ll.results.rds")

saveRDS(dg.ga.data,"dg.ga.data.rds")
saveRDS(ll.ga.data,"ll.ga.data.rds")

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/rds")

dg.ga.data <- readRDS("dg.ga.data.rds")
ll.ga.data <- readRDS("ll.ga.data.rds")
traj.atac <- readRDS("atac.post.clustering.post.traj.fit.rds")

cor.test.dg.results <- readRDS("cor.test.dg.results.rds")
cor.test.ll.results <- readRDS("cor.test.ll.results.rds")

t1 <- as.numeric(cor.test.dg.results[,1])
t2 <- as.numeric(cor.test.dg.results[,2])
t3 <- as.numeric(cor.test.dg.results[,3])
t4 <- cbind(t1,t2,t3)
dimnames(t4)[[1]] <- dimnames(cor.test.dg.results)[[1]]
dimnames(t4)[[2]] <- dimnames(cor.test.dg.results)[[2]]
cor.test.dg.results <- t4
cor.test.dg.results <- cor.test.dg.results[rev(order(cor.test.dg.results[,1])), ]
sub.cor.test.dg.results <- cor.test.dg.results[c(1:500,((dim(cor.test.dg.results)[1]-499):dim(cor.test.dg.results)[1])),]

traj.atac.dg.post.traj <- traj.atac[,traj.atac@meta.data$datatype=="DG"]
DefaultAssay(traj.atac.dg.post.traj) <- 'RNA'
temp <- GetAssayData(traj.atac.dg.post.traj,"RNA")

pdf("27_atac_dg_traj_gene_activity_vs_pseudotime_top500_pos_top500_neg_plots.pdf")
for(i in 1:dim(sub.cor.test.dg.results)[1]) {
	plot(dg.ga.data[temp[dimnames(sub.cor.test.dg.results)[[1]][i],]>0],temp[dimnames(sub.cor.test.dg.results)[[1]][i],temp[dimnames(sub.cor.test.dg.results)[[1]][i],]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main=dimnames(sub.cor.test.dg.results)[[1]][i])
	lll <- lowess(temp[dimnames(sub.cor.test.dg.results)[[1]][i],temp[dimnames(sub.cor.test.dg.results)[[1]][i],]>0]~dg.ga.data[temp[dimnames(sub.cor.test.dg.results)[[1]][i],]>0])
	lines(lll,lwd=2)
}
dev.off()

t1 <- as.numeric(cor.test.ll.results[,1])
t2 <- as.numeric(cor.test.ll.results[,2])
t3 <- as.numeric(cor.test.ll.results[,3])
t4 <- cbind(t1,t2,t3)
dimnames(t4)[[1]] <- dimnames(cor.test.ll.results)[[1]]
dimnames(t4)[[2]] <- dimnames(cor.test.ll.results)[[2]]
cor.test.ll.results <- t4
cor.test.ll.results <- cor.test.ll.results[rev(order(cor.test.ll.results[,1])), ]
sub.cor.test.ll.results <- cor.test.ll.results[c(1:500,((dim(cor.test.ll.results)[1]-499):dim(cor.test.ll.results)[1])),]

traj.atac.ll.post.traj <- traj.atac[,traj.atac@meta.data$datatype=="LL"]
DefaultAssay(traj.atac.ll.post.traj) <- 'RNA'
temp <- GetAssayData(traj.atac.ll.post.traj,"RNA")

pdf("28_atac_ll_traj_gene_activity_vs_pseudotime_top500_pos_top500_neg_plots.pdf")
for(i in 1:dim(sub.cor.test.ll.results)[1]) {
	plot(ll.ga.data[temp[dimnames(sub.cor.test.ll.results)[[1]][i],]>0],temp[dimnames(sub.cor.test.ll.results)[[1]][i],temp[dimnames(sub.cor.test.ll.results)[[1]][i],]>0],col=8,xlab="pseudotime",ylab="ATAC-based Gene Activity",main=dimnames(sub.cor.test.ll.results)[[1]][i])
	lll <- lowess(temp[dimnames(sub.cor.test.ll.results)[[1]][i],temp[dimnames(sub.cor.test.ll.results)[[1]][i],]>0]~ll.ga.data[temp[dimnames(sub.cor.test.ll.results)[[1]][i],]>0])
	lines(lll,lwd=2)
}
dev.off()

pdf("29_density_plots_of_dg_ll_correlations.pdf",width=10)
par(mfrow=c(1,2))
plot(density(cor.test.dg.results[,1]),main="DG")
temp1 <- mean(cor.test.dg.results[,1])
temp1
temp2 <- sd(cor.test.dg.results[,1])
abline(v=temp1,lty=1)
abline(v=(temp1-(2*temp2)),lty=2)
(temp1-(2*temp2))
abline(v=(temp1+(2*temp2)),lty=2)
(temp1+(2*temp2))
legend("topleft",c("Mean = -0.04","+2SD = 0.08","-2SD = -0.16"))
plot(density(cor.test.ll.results[,1]),main="LL")
temp1 <- mean(cor.test.ll.results[,1])
temp1
temp2 <- sd(cor.test.ll.results[,1])
abline(v=temp1,lty=1)
abline(v=(temp1-(2*temp2)),lty=2)
(temp1-(2*temp2))
abline(v=(temp1+(2*temp2)),lty=2)
(temp1+(2*temp2))
legend("topleft",c("Mean = -0.09","+2SD = 0.07","-2SD = -0.26"))
dev.off()

#------------------------------------------------------------------------------
# Define databases to use for EnrichR
#------------------------------------------------------------------------------

library("enrichR")
dbs <- listEnrichrDbs()

# mouse

dbs <- c("GO_Molecular_Function_2023", 
"GO_Cellular_Component_2023", "GO_Biological_Process_2023",
"WikiPathways_2019_Mouse",
"KEGG_2019_Mouse")

#------------------------------------------------------------------------------
# Run EnrichR - human
#------------------------------------------------------------------------------

# dg

temp1 <- mean(cor.test.dg.results[,1])
temp2 <- sd(cor.test.dg.results[,1])
temp3 <- temp1-(2*temp2)
temp4 <- cor.test.dg.results[,1]<temp3
temp3 <- temp1+(2*temp2)
temp5 <- cor.test.dg.results[,1]>temp3
temp6 <- temp4+temp5
temp7 <- cor.test.dg.results[temp6==1,]
temp8 <- dimnames(temp7)[[1]]
temp9 <- enrichr(temp8, dbs)
printEnrich(temp9,prefix = "30_dg_enrichr_results",outFile="excel")

if(dim(temp9[[1]])[1]>0) {
svg("31_dg_enrichr_results_go_molecular_function_2023.svg")
print(plotEnrich(temp9[[1]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[2]])[1]>0) {
svg("32_dg_enrichr_results_go_cellular_component_2023.svg")
print(plotEnrich(temp9[[2]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[3]])[1]>0) {
svg("33_dg_enrichr_results_go_biological_process_2023.svg")
print(plotEnrich(temp9[[3]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[4]])[1]>0) {
svg("34_dg_enrichr_results_wikipathways_2019_mouse.svg",width=10)
print(plotEnrich(temp9[[4]], showTerms = 20, numChar = 80, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[5]])[1]>0) {
svg("35_dg_enrichr_results_kegg_2019_mouse.svg")
print(plotEnrich(temp9[[5]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

# ll

temp1 <- mean(cor.test.ll.results[,1])
temp2 <- sd(cor.test.ll.results[,1])
temp3 <- temp1-(2*temp2)
temp4 <- cor.test.ll.results[,1]<temp3
temp3 <- temp1+(2*temp2)
temp5 <- cor.test.ll.results[,1]>temp3
temp6 <- temp4+temp5
temp7 <- cor.test.ll.results[temp6==1,]
temp8 <- dimnames(temp7)[[1]]
temp9 <- enrichr(temp8, dbs)
printEnrich(temp9,prefix = "36_ll_enrichr_results",outFile="excel")

if(dim(temp9[[1]])[1]>0) {
svg("37_ll_enrichr_results_go_molecular_function_2023.svg")
print(plotEnrich(temp9[[1]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[2]])[1]>0) {
svg("38_ll_enrichr_results_go_cellular_component_2023.svg")
print(plotEnrich(temp9[[2]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[3]])[1]>0) {
svg("39_ll_enrichr_results_go_biological_process_2023.svg",width=10)
print(plotEnrich(temp9[[3]], showTerms = 20, numChar = 80, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[4]])[1]>0) {
svg("40_ll_enrichr_results_wikipathways_2019_mouse.svg",width=10)
print(plotEnrich(temp9[[4]], showTerms = 20, numChar = 80, y = "Count", orderBy = "P.value"))
dev.off()
}

if(dim(temp9[[5]])[1]>0) {
svg("41_ll_enrichr_results_kegg_2019_mouse.svg")
print(plotEnrich(temp9[[5]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value"))
dev.off()
}

#------------------------------------------------------------------------------
# Overrepresented motif analysis
# https://stuartlab.org/signac/articles/motif_vignette.html#adding-motif-information-to-the-seurat-object
#------------------------------------------------------------------------------

setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/ATAC/rds")

traj.atac <- readRDS("atac.post.clustering.post.traj.fit.rds")

p1 <- DimPlot(traj.atac, split.by = "datatype", group.by = "Final_ATAC_Clusters", pt.size = 0.1)
p1

set.seed(1234)

# Get a list of motif position frequency matrices from the JASPAR database

pfm <- getMatrixSet(
  x = JASPAR2020,
  opts = list(collection = "CORE", tax_group = 'vertebrates', all_versions = FALSE)
)

# remove non standard chromosomes

final.atac.matrix.analysis <- traj.atac
gr <- granges(final.atac.matrix.analysis)
seq_keep <- seqnames(gr) %in% seqnames(BSgenome.Mmusculus.UCSC.mm10) 
seq_keep <- as.vector(seq_keep)
feat.keep <- GRangesToString(grange = gr[seq_keep])
final.atac.matrix.analysis[['ATAC']] <- subset(final.atac.matrix.analysis[["ATAC"]], features = feat.keep)

# add motif information

final.atac.matrix.analysis <- AddMotifs(
  object = final.atac.matrix.analysis,
  genome = BSgenome.Mmusculus.UCSC.mm10,
  pfm = pfm
)

# find differential peaks between cluster 0 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.0 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="0","in.cluster.0","not.in.cluster.0")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.0
da.peaks.cluster.0.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.0',
  ident.2 = 'not.in.cluster.0',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.0.vs.all <- rownames(da.peaks.cluster.0.vs.all[da.peaks.cluster.0.vs.all$p_val<0.005,])

# find differential peaks between cluster 1 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.1 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="1","in.cluster.1","not.in.cluster.1")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.1
da.peaks.cluster.1.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.1',
  ident.2 = 'not.in.cluster.1',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.1.vs.all <- rownames(da.peaks.cluster.1.vs.all[da.peaks.cluster.1.vs.all$p_val<0.005,])

# find differential peaks between cluster 2 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.2 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="2","in.cluster.2","not.in.cluster.2")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.2
da.peaks.cluster.2.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.2',
  ident.2 = 'not.in.cluster.2',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.2.vs.all <- rownames(da.peaks.cluster.2.vs.all[da.peaks.cluster.2.vs.all$p_val<0.005,])

# find differential peaks between cluster 3 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.3 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="3","in.cluster.3","not.in.cluster.3")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.3
da.peaks.cluster.3.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.3',
  ident.2 = 'not.in.cluster.3',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.3.vs.all <- rownames(da.peaks.cluster.3.vs.all[da.peaks.cluster.3.vs.all$p_val<0.005,])

# find differential peaks between cluster 4 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.4 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="4","in.cluster.4","not.in.cluster.4")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.4
da.peaks.cluster.4.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.4',
  ident.2 = 'not.in.cluster.4',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.4.vs.all <- rownames(da.peaks.cluster.4.vs.all[da.peaks.cluster.4.vs.all$p_val<0.005,])

# find differential peaks between cluster 5 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.5 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="5","in.cluster.5","not.in.cluster.5")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.5
da.peaks.cluster.5.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.5',
  ident.2 = 'not.in.cluster.5',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.5.vs.all <- rownames(da.peaks.cluster.5.vs.all[da.peaks.cluster.5.vs.all$p_val<0.005,])

# find differential peaks between cluster 6 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.6 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="6","in.cluster.6","not.in.cluster.6")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.6
da.peaks.cluster.6.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.6',
  ident.2 = 'not.in.cluster.6',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.6.vs.all <- rownames(da.peaks.cluster.6.vs.all[da.peaks.cluster.6.vs.all$p_val<0.005,])

# find differential peaks between cluster 7 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.7 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="7","in.cluster.7","not.in.cluster.7")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.7
da.peaks.cluster.7.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.7',
  ident.2 = 'not.in.cluster.7',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.7.vs.all <- rownames(da.peaks.cluster.7.vs.all[da.peaks.cluster.7.vs.all$p_val<0.005,])

# find differential peaks between cluster 8 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.8 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="8","in.cluster.8","not.in.cluster.8")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.8
da.peaks.cluster.8.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.8',
  ident.2 = 'not.in.cluster.8',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.8.vs.all <- rownames(da.peaks.cluster.8.vs.all[da.peaks.cluster.8.vs.all$p_val<0.005,])

# find differential peaks between cluster 9 vs all others

final.atac.matrix.analysis@meta.data$in.cluster.9 <- ifelse(final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="9","in.cluster.9","not.in.cluster.9")
Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$in.cluster.9
da.peaks.cluster.9.vs.all <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = 'in.cluster.9',
  ident.2 = 'not.in.cluster.9',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.9.vs.all <- rownames(da.peaks.cluster.9.vs.all[da.peaks.cluster.9.vs.all$p_val<0.005,])

wb <- createWorkbook("6_differential_peak_test_results_cluster_0_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.0.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_0_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_2_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.2.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_2_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_3_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.3.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_3_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_4_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.4.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_4_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_5_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.5.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_5_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_6_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.6.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_6_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_7_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.7.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_7_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_8_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.8.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_8_vs_all.xlsx", overwrite = TRUE)

wb <- createWorkbook("6_differential_peak_test_results_cluster_9_vs_all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.9.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "6_differential_peak_test_results_cluster_9_vs_all.xlsx", overwrite = TRUE)

top.da.peaks.cluster.0.vs.all <- rownames(da.peaks.cluster.0.vs.all[da.peaks.cluster.0.vs.all$p_val<0.05,])
top.da.peaks.cluster.2.vs.all <- rownames(da.peaks.cluster.2.vs.all[da.peaks.cluster.2.vs.all$p_val<0.05,])
top.da.peaks.cluster.3.vs.all <- rownames(da.peaks.cluster.3.vs.all[da.peaks.cluster.3.vs.all$p_val<0.05,])
top.da.peaks.cluster.4.vs.all <- rownames(da.peaks.cluster.4.vs.all[da.peaks.cluster.4.vs.all$p_val<0.05,])
top.da.peaks.cluster.5.vs.all <- rownames(da.peaks.cluster.5.vs.all[da.peaks.cluster.5.vs.all$p_val<0.05,])
top.da.peaks.cluster.6.vs.all <- rownames(da.peaks.cluster.6.vs.all[da.peaks.cluster.6.vs.all$p_val<0.05,])
top.da.peaks.cluster.7.vs.all <- rownames(da.peaks.cluster.7.vs.all[da.peaks.cluster.7.vs.all$p_val<0.05,])
top.da.peaks.cluster.8.vs.all <- rownames(da.peaks.cluster.8.vs.all[da.peaks.cluster.8.vs.all$p_val<0.05,])
top.da.peaks.cluster.9.vs.all <- rownames(da.peaks.cluster.9.vs.all[da.peaks.cluster.9.vs.all$p_val<0.05,])

enriched.motifs.cluster.0.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.0.vs.all)

enriched.motifs.cluster.2.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.2.vs.all)

enriched.motifs.cluster.3.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.3.vs.all)

enriched.motifs.cluster.4.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.4.vs.all)

enriched.motifs.cluster.5.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.5.vs.all)

enriched.motifs.cluster.6.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.6.vs.all)

enriched.motifs.cluster.7.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.7.vs.all)

enriched.motifs.cluster.8.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.8.vs.all)

enriched.motifs.cluster.9.vs.all <- FindMotifs(object = final.atac.matrix.analysis,features = top.da.peaks.cluster.9.vs.all)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.0.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.0.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.0.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.2.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.2.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.2.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.3.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.3.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.3.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.4.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.4.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.4.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.5.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.5.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.5.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.6.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.6.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.6.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.7.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.7.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.7.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.8.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.8.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.8.vs.all.xlsx", overwrite = TRUE)

wb <- createWorkbook("7_diffx_peak_motif_enrich_results_cluster.9.vs.all")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.9.vs.all, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "7_diffx_peak_motif_enrich_results_cluster.9.vs.all.xlsx", overwrite = TRUE)

pdf("8_diffx_peak_motif_enrich_plots_cluster.0.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.0.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.0.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.2.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.2.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.2.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.3.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.3.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.3.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.4.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.4.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.4.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.5.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.5.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.5.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.6.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.6.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.6.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.7.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.7.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.7.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.8.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.8.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.8.vs.all)[i]))
}
dev.off()

pdf("8_diffx_peak_motif_enrich_plots_cluster.9.vs.all.pdf")
for(i in 1:dim(enriched.motifs.cluster.9.vs.all)[1]) {
	print(MotifPlot(final.atac.matrix.analysis,motifs=rownames(enriched.motifs.cluster.9.vs.all)[i]))
}
dev.off()

# find differential peaks between DG and LL for cluster 0

final.atac.matrix.analysis.cluster.0 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="0"]
Idents(final.atac.matrix.analysis.cluster.0) <- final.atac.matrix.analysis.cluster.0@meta.data$datatype
da.peaks.cluster.0 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.0,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.0 <- rownames(da.peaks.cluster.0[da.peaks.cluster.0$p_val<0.005,])

# find differential peaks between DG and LL for cluster 1

final.atac.matrix.analysis.cluster.1 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="1"]
Idents(final.atac.matrix.analysis.cluster.1) <- final.atac.matrix.analysis.cluster.1@meta.data$datatype
da.peaks.cluster.1 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.1,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.1 <- rownames(da.peaks.cluster.1[da.peaks.cluster.1$p_val<0.05,])


# find differential peaks between DG and LL for cluster 2

final.atac.matrix.analysis.cluster.2 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="2"]
Idents(final.atac.matrix.analysis.cluster.2) <- final.atac.matrix.analysis.cluster.2@meta.data$datatype
da.peaks.cluster.2 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.2,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.2 <- rownames(da.peaks.cluster.2[da.peaks.cluster.2$p_val<0.05,])

# find differential peaks between DG and LL for cluster 3

final.atac.matrix.analysis.cluster.3 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="3"]
Idents(final.atac.matrix.analysis.cluster.3) <- final.atac.matrix.analysis.cluster.3@meta.data$datatype
da.peaks.cluster.3 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.3,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.3 <- rownames(da.peaks.cluster.3[da.peaks.cluster.3$p_val<0.05,])

# find differential peaks between DG and LL for cluster 4

final.atac.matrix.analysis.cluster.4 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="4"]
Idents(final.atac.matrix.analysis.cluster.4) <- final.atac.matrix.analysis.cluster.4@meta.data$datatype
da.peaks.cluster.4 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.4,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.4 <- rownames(da.peaks.cluster.4[da.peaks.cluster.4$p_val<0.05,])

# find differential peaks between DG and LL for cluster 5

final.atac.matrix.analysis.cluster.5 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="5"]
Idents(final.atac.matrix.analysis.cluster.5) <- final.atac.matrix.analysis.cluster.5@meta.data$datatype
da.peaks.cluster.5 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.5,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.5 <- rownames(da.peaks.cluster.5[da.peaks.cluster.5$p_val<0.05,])

# find differential peaks between DG and LL for cluster 6

final.atac.matrix.analysis.cluster.6 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="6"]
Idents(final.atac.matrix.analysis.cluster.6) <- final.atac.matrix.analysis.cluster.6@meta.data$datatype
da.peaks.cluster.6 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.6,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.6 <- rownames(da.peaks.cluster.6[da.peaks.cluster.6$p_val<0.05,])

# find differential peaks between DG and LL for cluster 7

final.atac.matrix.analysis.cluster.7 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="7"]
Idents(final.atac.matrix.analysis.cluster.7) <- final.atac.matrix.analysis.cluster.7@meta.data$datatype
da.peaks.cluster.7 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.7,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.7 <- rownames(da.peaks.cluster.7[da.peaks.cluster.7$p_val<0.05,])

# find differential peaks between DG and LL for cluster 8

final.atac.matrix.analysis.cluster.8 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="8"]
Idents(final.atac.matrix.analysis.cluster.8) <- final.atac.matrix.analysis.cluster.8@meta.data$datatype
da.peaks.cluster.8 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.8,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.8 <- rownames(da.peaks.cluster.8[da.peaks.cluster.8$p_val<0.05,])

# find differential peaks between DG and LL for cluster 9

final.atac.matrix.analysis.cluster.9 <- final.atac.matrix.analysis[,final.atac.matrix.analysis@meta.data$Final_ATAC_Clusters=="9"]
Idents(final.atac.matrix.analysis.cluster.9) <- final.atac.matrix.analysis.cluster.9@meta.data$datatype
da.peaks.cluster.9 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.9,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  test.use = 'LR',
  min.pct = 0.05,
  latent.vars = 'nCount_ATAC'
)
top.da.peaks.cluster.9 <- rownames(da.peaks.cluster.9[da.peaks.cluster.9$p_val<0.05,])

dim(da.peaks.cluster.0)
dim(da.peaks.cluster.1)
dim(da.peaks.cluster.2)
dim(da.peaks.cluster.3)
dim(da.peaks.cluster.4)
dim(da.peaks.cluster.5)
dim(da.peaks.cluster.6)
dim(da.peaks.cluster.7)
dim(da.peaks.cluster.8)
dim(da.peaks.cluster.9)

length(top.da.peaks.cluster.0)
length(top.da.peaks.cluster.1)
length(top.da.peaks.cluster.2)
length(top.da.peaks.cluster.3)
length(top.da.peaks.cluster.4)
length(top.da.peaks.cluster.5)
length(top.da.peaks.cluster.6)
length(top.da.peaks.cluster.7)
length(top.da.peaks.cluster.8)
length(top.da.peaks.cluster.9)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.0, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_0.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_1.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.2, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_2.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_3")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.3, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_3.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_4")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.4, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_4.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.5, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_5.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_6")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.6, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_6.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_7")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.7, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_7.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_8")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.8, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_8.xlsx", overwrite = TRUE)

wb <- createWorkbook("1_differential_peak_test_results_dg_vs_ll_cluster_9")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", da.peaks.cluster.9, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "1_differential_peak_test_results_dg_vs_ll_cluster_9.xlsx", overwrite = TRUE)

# START OPTIONAL background peak file prepatation

Idents(final.atac.matrix.analysis.cluster.0) <- final.atac.matrix.analysis.cluster.0@meta.data$Final_ATAC_Clusters
open.peaks.cluster.0 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.0, idents = "0")

Idents(final.atac.matrix.analysis.cluster.1) <- final.atac.matrix.analysis.cluster.1@meta.data$Final_ATAC_Clusters
open.peaks.cluster.1 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.1, idents = "1")

Idents(final.atac.matrix.analysis.cluster.2) <- final.atac.matrix.analysis.cluster.2@meta.data$Final_ATAC_Clusters
open.peaks.cluster.2 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.2, idents = "2")

Idents(final.atac.matrix.analysis.cluster.3) <- final.atac.matrix.analysis.cluster.3@meta.data$Final_ATAC_Clusters
open.peaks.cluster.3 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.3, idents = "3")

Idents(final.atac.matrix.analysis.cluster.4) <- final.atac.matrix.analysis.cluster.4@meta.data$Final_ATAC_Clusters
open.peaks.cluster.4 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.4, idents = "4")

Idents(final.atac.matrix.analysis.cluster.5) <- final.atac.matrix.analysis.cluster.5@meta.data$Final_ATAC_Clusters
open.peaks.cluster.5 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.5, idents = "5")

Idents(final.atac.matrix.analysis.cluster.6) <- final.atac.matrix.analysis.cluster.6@meta.data$Final_ATAC_Clusters
open.peaks.cluster.6 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.6, idents = "6")

Idents(final.atac.matrix.analysis.cluster.7) <- final.atac.matrix.analysis.cluster.7@meta.data$Final_ATAC_Clusters
open.peaks.cluster.7 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.7, idents = "7")

Idents(final.atac.matrix.analysis.cluster.8) <- final.atac.matrix.analysis.cluster.8@meta.data$Final_ATAC_Clusters
open.peaks.cluster.8 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.8, idents = "8")

Idents(final.atac.matrix.analysis.cluster.9) <- final.atac.matrix.analysis.cluster.9@meta.data$Final_ATAC_Clusters
open.peaks.cluster.9 <- AccessiblePeaks(final.atac.matrix.analysis.cluster.9, idents = "9")

meta.feature.cluster.0 <- GetAssayData(final.atac.matrix.analysis.cluster.0, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.1 <- GetAssayData(final.atac.matrix.analysis.cluster.1, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.2 <- GetAssayData(final.atac.matrix.analysis.cluster.2, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.3 <- GetAssayData(final.atac.matrix.analysis.cluster.3, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.4 <- GetAssayData(final.atac.matrix.analysis.cluster.4, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.5 <- GetAssayData(final.atac.matrix.analysis.cluster.5, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.6 <- GetAssayData(final.atac.matrix.analysis.cluster.6, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.7 <- GetAssayData(final.atac.matrix.analysis.cluster.7, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.8 <- GetAssayData(final.atac.matrix.analysis.cluster.8, assay = "ATAC", slot = "meta.features")
meta.feature.cluster.9 <- GetAssayData(final.atac.matrix.analysis.cluster.9, assay = "ATAC", slot = "meta.features")

peaks.matched.cluster.0 <- MatchRegionStats(meta.feature=meta.feature.cluster.0[open.peaks.cluster.0, ],query.feature = meta.feature.cluster.0[top.da.peaks.cluster.0, ])

peaks.matched.cluster.1 <- MatchRegionStats(meta.feature=meta.feature.cluster.1[open.peaks.cluster.1, ],query.feature = meta.feature.cluster.1[top.da.peaks.cluster.1, ])

peaks.matched.cluster.2 <- MatchRegionStats(meta.feature=meta.feature.cluster.2[open.peaks.cluster.2, ],query.feature = meta.feature.cluster.2[top.da.peaks.cluster.2, ])

peaks.matched.cluster.3 <- MatchRegionStats(meta.feature=meta.feature.cluster.3[open.peaks.cluster.3, ],query.feature = meta.feature.cluster.3[top.da.peaks.cluster.3, ])

peaks.matched.cluster.4 <- MatchRegionStats(meta.feature=meta.feature.cluster.4[open.peaks.cluster.4, ],query.feature = meta.feature.cluster.4[top.da.peaks.cluster.4, ])

peaks.matched.cluster.5 <- MatchRegionStats(meta.feature=meta.feature.cluster.5[open.peaks.cluster.5, ],query.feature = meta.feature.cluster.5[top.da.peaks.cluster.5, ])

peaks.matched.cluster.6 <- MatchRegionStats(meta.feature=meta.feature.cluster.6[open.peaks.cluster.6, ],query.feature = meta.feature.cluster.6[top.da.peaks.cluster.6, ])

peaks.matched.cluster.7 <- MatchRegionStats(meta.feature=meta.feature.cluster.7[open.peaks.cluster.7, ],query.feature = meta.feature.cluster.7[top.da.peaks.cluster.7, ])

peaks.matched.cluster.8 <- MatchRegionStats(meta.feature=meta.feature.cluster.8[open.peaks.cluster.8, ],query.feature = meta.feature.cluster.8[top.da.peaks.cluster.8, ])

peaks.matched.cluster.9 <- MatchRegionStats(meta.feature=meta.feature.cluster.9[open.peaks.cluster.9, ],query.feature = meta.feature.cluster.9[top.da.peaks.cluster.9, ])

# STOP OPTIONAL background peak file prepatation

# find motifs method 1

enriched.motifs.cluster.0 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.0,
  features = top.da.peaks.cluster.0)

enriched.motifs.cluster.1 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.1,
  features = top.da.peaks.cluster.1)

enriched.motifs.cluster.2 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.2,
  features = top.da.peaks.cluster.2)

enriched.motifs.cluster.3 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.3,
  features = top.da.peaks.cluster.3)

enriched.motifs.cluster.4 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.4,
  features = top.da.peaks.cluster.4)

enriched.motifs.cluster.5 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.5,
  features = top.da.peaks.cluster.5)

enriched.motifs.cluster.6 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.6,
  features = top.da.peaks.cluster.6)

enriched.motifs.cluster.7 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.7,
  features = top.da.peaks.cluster.7)

enriched.motifs.cluster.8 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.8,
  features = top.da.peaks.cluster.8)

enriched.motifs.cluster.9 <- FindMotifs(
  object = final.atac.matrix.analysis.cluster.9,
  features = top.da.peaks.cluster.9)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.0, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_0.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_1.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.2, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_2.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_3")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.3, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_3.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_4")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.4, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_4.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.5, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_5.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_6")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.6, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_6.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_7")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.7, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_7.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_8")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.8, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_8.xlsx", overwrite = TRUE)

wb <- createWorkbook("2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_9")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", enriched.motifs.cluster.9, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "2_diffx_peak_motif_enrich_results_dg_vs_ll_cluster_9.xlsx", overwrite = TRUE)

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_0.pdf")
for(i in 1:dim(enriched.motifs.cluster.0)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.0,motifs=rownames(enriched.motifs.cluster.0)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_1.pdf")
for(i in 1:dim(enriched.motifs.cluster.1)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.1,motifs=rownames(enriched.motifs.cluster.1)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_2.pdf")
for(i in 1:dim(enriched.motifs.cluster.2)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.2,motifs=rownames(enriched.motifs.cluster.2)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_3.pdf")
for(i in 1:dim(enriched.motifs.cluster.3)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.3,motifs=rownames(enriched.motifs.cluster.3)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_4.pdf")
for(i in 1:dim(enriched.motifs.cluster.4)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.4,motifs=rownames(enriched.motifs.cluster.4)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_5.pdf")
for(i in 1:dim(enriched.motifs.cluster.5)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.5,motifs=rownames(enriched.motifs.cluster.5)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_6.pdf")
for(i in 1:dim(enriched.motifs.cluster.6)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.6,motifs=rownames(enriched.motifs.cluster.6)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_7.pdf")
for(i in 1:dim(enriched.motifs.cluster.7)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.7,motifs=rownames(enriched.motifs.cluster.7)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_8.pdf")
for(i in 1:dim(enriched.motifs.cluster.8)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.8,motifs=rownames(enriched.motifs.cluster.8)[i]))
}
dev.off()

pdf("3_diffx_peak_motif_enrich_plots_dg_vs_ll_cluster_9.pdf")
for(i in 1:dim(enriched.motifs.cluster.9)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.9,motifs=rownames(enriched.motifs.cluster.9)[i]))
}
dev.off()

saveRDS(final.atac.matrix.analysis.cluster.0,"final.atac.matrix.analysis.cluster.0.rds")
saveRDS(final.atac.matrix.analysis.cluster.1,"final.atac.matrix.analysis.cluster.1.rds")
saveRDS(final.atac.matrix.analysis.cluster.2,"final.atac.matrix.analysis.cluster.2.rds")
saveRDS(final.atac.matrix.analysis.cluster.3,"final.atac.matrix.analysis.cluster.3.rds")
saveRDS(final.atac.matrix.analysis.cluster.4,"final.atac.matrix.analysis.cluster.4.rds")
saveRDS(final.atac.matrix.analysis.cluster.5,"final.atac.matrix.analysis.cluster.5.rds")
saveRDS(final.atac.matrix.analysis.cluster.6,"final.atac.matrix.analysis.cluster.6.rds")
saveRDS(final.atac.matrix.analysis.cluster.7,"final.atac.matrix.analysis.cluster.7.rds")
saveRDS(final.atac.matrix.analysis.cluster.8,"final.atac.matrix.analysis.cluster.8.rds")
saveRDS(final.atac.matrix.analysis.cluster.9,"final.atac.matrix.analysis.cluster.9.rds")

# find motifs method 2

final.atac.matrix.analysis.cluster.0 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.0,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.1 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.1,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.2 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.2,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.3 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.3,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.4 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.4,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.5 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.5,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.6 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.6,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.7 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.7,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.8 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.8,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

final.atac.matrix.analysis.cluster.9 <- RunChromVAR(
  object = final.atac.matrix.analysis.cluster.9,
  genome = BSgenome.Mmusculus.UCSC.mm10
)

DefaultAssay(final.atac.matrix.analysis.cluster.0) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.1) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.2) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.3) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.4) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.5) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.6) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.7) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.8) <- 'chromvar'
DefaultAssay(final.atac.matrix.analysis.cluster.9) <- 'chromvar'

Idents(final.atac.matrix.analysis.cluster.0) <- final.atac.matrix.analysis.cluster.0@meta.data$datatype
differential.activity.cluster.0 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.0,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.1) <- final.atac.matrix.analysis.cluster.1@meta.data$datatype
differential.activity.cluster.1 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.1,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.2) <- final.atac.matrix.analysis.cluster.2@meta.data$datatype
differential.activity.cluster.2 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.2,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.3) <- final.atac.matrix.analysis.cluster.3@meta.data$datatype
differential.activity.cluster.3 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.3,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.4) <- final.atac.matrix.analysis.cluster.4@meta.data$datatype
differential.activity.cluster.4 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.4,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.5) <- final.atac.matrix.analysis.cluster.5@meta.data$datatype
differential.activity.cluster.5 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.5,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.6) <- final.atac.matrix.analysis.cluster.6@meta.data$datatype
differential.activity.cluster.6 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.6,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.7) <- final.atac.matrix.analysis.cluster.7@meta.data$datatype
differential.activity.cluster.7 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.7,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.8) <- final.atac.matrix.analysis.cluster.8@meta.data$datatype
differential.activity.cluster.8 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.8,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

Idents(final.atac.matrix.analysis.cluster.9) <- final.atac.matrix.analysis.cluster.9@meta.data$datatype
differential.activity.cluster.9 <- FindMarkers(
  object = final.atac.matrix.analysis.cluster.9,
  ident.1 = 'DG',
  ident.2 = 'LL',
  only.pos = TRUE,
  mean.fxn = rowMeans,
  fc.name = "avg_diff"
)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.0, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_0.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_1.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.2, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_2.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_3")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.3, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_3.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_4")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.4, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_4.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.5, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_5.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_6")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.6, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_6.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_7")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.7, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_7.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_8")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", differential.activity.cluster.8, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_8.xlsx", overwrite = TRUE)

wb <- createWorkbook("4_differential_activity_test_results_dg_vs_ll_cluster_9")
addWorksheet(wb, "results")
writeData(wb, sheet = "results",differential.activity.cluster.9, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "4_differential_activity_test_results_dg_vs_ll_cluster_9.xlsx", overwrite = TRUE)

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_0.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.0)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.0,motifs=rownames(enriched.activity.motifs.cluster.0)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_1.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.1)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.1,motifs=rownames(enriched.activity.motifs.cluster.1)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_2.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.2)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.2,motifs=rownames(enriched.activity.motifs.cluster.2)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_3.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.3)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.3,motifs=rownames(enriched.activity.motifs.cluster.3)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_4.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.4)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.4,motifs=rownames(enriched.activity.motifs.cluster.4)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_5.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.5)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.5,motifs=rownames(enriched.activity.motifs.cluster.5)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_6.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.6)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.6,motifs=rownames(enriched.activity.motifs.cluster.6)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_7.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.7)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.7,motifs=rownames(enriched.activity.motifs.cluster.7)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_8.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.8)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.8,motifs=rownames(enriched.activity.motifs.cluster.8)[i],assay = 'ATAC'))
}
dev.off()

pdf("5_diffx_activity_motif_plots_dg_vs_ll_cluster_9.pdf")
for(i in 1:dim(enriched.activity.motifs.cluster.9)[1]) {
	print(MotifPlot(final.atac.matrix.analysis.cluster.9,motifs=rownames(enriched.activity.motifs.cluster.9)[i],assay = 'ATAC'))
}
dev.off()

saveRDS(final.atac.matrix.analysis.cluster.0,"final.atac.matrix.analysis.cluster.0.rds")
saveRDS(final.atac.matrix.analysis.cluster.1,"final.atac.matrix.analysis.cluster.1.rds")
saveRDS(final.atac.matrix.analysis.cluster.2,"final.atac.matrix.analysis.cluster.2.rds")
saveRDS(final.atac.matrix.analysis.cluster.3,"final.atac.matrix.analysis.cluster.3.rds")
saveRDS(final.atac.matrix.analysis.cluster.4,"final.atac.matrix.analysis.cluster.4.rds")
saveRDS(final.atac.matrix.analysis.cluster.5,"final.atac.matrix.analysis.cluster.5.rds")
saveRDS(final.atac.matrix.analysis.cluster.6,"final.atac.matrix.analysis.cluster.6.rds")
saveRDS(final.atac.matrix.analysis.cluster.7,"final.atac.matrix.analysis.cluster.7.rds")
saveRDS(final.atac.matrix.analysis.cluster.8,"final.atac.matrix.analysis.cluster.8.rds")
saveRDS(final.atac.matrix.analysis.cluster.9,"final.atac.matrix.analysis.cluster.9.rds")
